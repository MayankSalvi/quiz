
const quizDataOriginal = {
  
  "UGC NET Paper II": [
    {
      "id": 1,
      "question": "शिक्षा के किस दर्शनशास्त्रीय संप्रदाय का मानना है कि 'सत्य अपरिवर्तनीय है' और शिक्षा का उद्देश्य 'शाश्वत मूल्यों' को विकसित करना है?",
      "options": ["प्रकृतिवाद (Naturalism)", "आदर्शवाद (Idealism)", "यथार्थवाद (Realism)", "व्यवहारवाद (Pragmatism)"],
      "correctIndex": 1,
      "explanation": "आदर्शवाद (Idealism) प्लेटो जैसे विचारकों पर आधारित है, जो मानते हैं कि अंतिम सत्य और मूल्य अपरिवर्तनीय (शाश्वत) हैं।"
    },
    {
      "id": 2,
      "question": "किसने 'मनोसामाजिक विकास' (Psychosocial Development) के आठ चरणों का सिद्धांत प्रतिपादित किया?",
      "options": ["सिगमंड फ्रायड (Sigmund Freud)", "जीन पियाजे (Jean Piaget)", "एरिक एरिकसन (Erik Erikson)", "बी.एफ. स्किनर (B.F. Skinner)"],
      "correctIndex": 2,
      "explanation": "एरिक एरिकसन ने मनोसामाजिक विकास के आठ चरणों का सिद्धांत दिया, जो जीवनकाल तक चलता है और पहचान संकट (Identity Crisis) पर ज़ोर देता है।"
    },
    {
      "id": 3,
      "question": "शिक्षण के किस स्तर में छात्र को 'समस्या को समझने, उसका विश्लेषण करने और संश्लेषण करने' की आवश्यकता होती है?",
      "options": ["स्मृति स्तर (Memory Level)", "समझ स्तर (Understanding Level)", "चिंतनशील स्तर (Reflective Level)", "स्वायत्त विकास स्तर (Autonomous Development Level)"],
      "correctIndex": 2,
      "explanation": "चिंतनशील स्तर (Reflective Level) सबसे उच्च स्तर है, जिसमें छात्र समस्या-समाधान, समालोचनात्मक सोच और रचनात्मकता का उपयोग करता है।"
    },
    {
      "id": 4,
      "question": "शोध अभिकल्प (Research Design) का कौन सा प्रकार 'कारण और प्रभाव' (Cause and Effect) संबंध स्थापित करने के लिए सबसे उपयुक्त है?",
      "options": ["विवरणात्मक शोध (Descriptive Research)", "सहसंबंधात्मक शोध (Correlational Research)", "प्रायोगिक शोध (Experimental Research)", "ऐतिहासिक शोध (Historical Research)"],
      "correctIndex": 2,
      "explanation": "प्रायोगिक शोध (Experimental Research) में चरों में हेरफेर करके (Manipulation) कारण और प्रभाव संबंध स्थापित किया जाता है।"
    },
    {
      "id": 5,
      "question": "केंद्रीय प्रवृत्ति (Central Tendency) का वह कौन सा माप है जो 'सबसे अधिक बार' आने वाले स्कोर (Most Frequent Score) को दर्शाता है?",
      "options": ["माध्य (Mean)", "माध्यिका (Median)", "बहुलक (Mode)", "मानक विचलन (Standard Deviation)"],
      "correctIndex": 2,
      "explanation": "बहुलक (Mode) वितरण में सबसे अधिक बार आने वाले मान को दर्शाता है।"
    },
    {
      "id": 6,
      "question": "एनसीटीई (NCTE) का पूर्ण रूप क्या है?",
      "options": ["नेशनल काउंसिल फॉर टीचर एजुकेशन (National Council for Teacher Education)", "नेशनल कमीशन फॉर ट्रेनिंग एंड इवैल्यूएशन (National Commission for Training and Evaluation)", "नेशनल करिकुलम फॉर टेक्निकल एजुकेशन (National Curriculum for Technical Education)", "नेशनल सेंटर फॉर टेस्ट इवैल्यूएशन (National Center for Test Evaluation)"],
      "correctIndex": 0,
      "explanation": "एनसीटीई (NCTE) भारत में शिक्षक शिक्षा की गुणवत्ता के लिए एक वैधानिक निकाय है।"
    },
    {
      "id": 7,
      "question": "समावेशी शिक्षा (Inclusive Education) का मुख्य उद्देश्य क्या है?",
      "options": ["केवल विशेष आवश्यकता वाले बच्चों को अलग कक्षाओं में पढ़ाना", "सामान्य और विशेष आवश्यकता वाले बच्चों को एक ही कक्षा में एक साथ पढ़ाना", "विशेष स्कूलों की संख्या बढ़ाना", "प्रतिभाशाली छात्रों को अलग से प्रशिक्षण देना"],
      "correctIndex": 1,
      "explanation": "समावेशी शिक्षा सभी बच्चों को, चाहे उनकी क्षमताएं कुछ भी हों, एक सामान्य, अनुकूल वातावरण में एक साथ शिक्षा प्रदान करने पर केंद्रित है।"
    },
    {
      "id": 8,
      "question": "शिक्षण-अधिगम प्रक्रिया में 'ब्लूम के वर्गीकरण' (Bloom's Taxonomy) का कौन सा डोमेन 'ज्ञान' और 'समझ' से संबंधित है?",
      "options": ["संज्ञानात्मक डोमेन (Cognitive Domain)", "भावात्मक डोमेन (Affective Domain)", "मनोगत्यात्मक डोमेन (Psychomotor Domain)", "सामाजिक डोमेन (Social Domain)"],
      "correctIndex": 0,
      "explanation": "संज्ञानात्मक डोमेन (Cognitive Domain) ज्ञान, समझ, अनुप्रयोग, विश्लेषण, संश्लेषण और मूल्यांकन से संबंधित है।"
    },
    {
      "id": 9,
      "question": "मास कम्युनिकेशन के लिए किस तकनीक का उपयोग किया जाता है, जिसमें शिक्षक एक ही समय में बड़ी संख्या में शिक्षार्थियों को शिक्षा प्रदान कर सकता है?",
      "options": ["टेलीकांफ्रेंसिंग (Teleconferencing)", "मूक (MOOCs)", "इंटरैक्टिव वीडियो (Interactive Video)", "सिमुलेशन (Simulation)"],
      "correctIndex": 1,
      "explanation": "मूक (Massive Open Online Courses) बड़े पैमाने पर खुले ऑनलाइन पाठ्यक्रम हैं, जो व्यापक पहुंच प्रदान करते हैं।"
    },
    {
      "id": 10,
      "question": "भारतीय संविधान का कौन सा अनुच्छेद 'शिक्षा के अधिकार' (Right to Education) को एक मौलिक अधिकार बनाता है?",
      "options": ["अनुच्छेद 21A", "अनुच्छेद 45", "अनुच्छेद 29", "अनुच्छेद 30"],
      "correctIndex": 0,
      "explanation": "86वें संविधान संशोधन (2002) द्वारा अनुच्छेद 21A जोड़ा गया, जो 6 से 14 वर्ष की आयु के बच्चों के लिए मुफ्त और अनिवार्य शिक्षा को मौलिक अधिकार बनाता है।"
    },
    {
      "id": 11,
      "question": "मानक विचलन (Standard Deviation) क्या मापता है?",
      "options": ["केंद्रीय प्रवृत्ति (Central Tendency)", "प्रसरणशीलता (Variability) / फैलाव (Dispersion)", "सहसंबंध (Correlation)", "त्रुटि (Error)"],
      "correctIndex": 1,
      "explanation": "मानक विचलन केंद्रीय मान (माध्य) से डेटा के फैलाव (प्रसरणशीलता) को मापने के लिए सबसे विश्वसनीय माप है।"
    },
    {
      "id": 12,
      "question": "शिक्षण के लिए उपयोग किए जाने वाले 'स्वयं' (SWAYAM) प्लेटफॉर्म का उद्देश्य क्या है?",
      "options": ["केवल व्यावसायिक प्रशिक्षण प्रदान करना", "स्कूल छात्रों के लिए खेल प्रतियोगिताएं आयोजित करना", "पहुँच, निष्पक्षता और गुणवत्ता के साथ मुफ्त ऑनलाइन पाठ्यक्रम प्रदान करना", "शोध अनुदान (Research Grants) वितरित करना"],
      "correctIndex": 2,
      "explanation": "स्वयं (Study Webs of Active-learning for Young Aspiring Minds) भारत सरकार का एक कार्यक्रम है जिसका उद्देश्य शिक्षा की पहुँच, निष्पक्षता और गुणवत्ता में सुधार करना है।"
    },
    {
      "id": 13,
      "question": "शोध में किस प्रकार की त्रुटि तब होती है जब 'शून्य परिकल्पना' (Null Hypothesis) सही होने पर भी उसे अस्वीकार कर दिया जाता है?",
      "options": ["टाईप I त्रुटि (Type I Error)", "टाईप II त्रुटि (Type II Error)", "प्रणालीगत त्रुटि (Systematic Error)", "यादृच्छिक त्रुटि (Random Error)"],
      "correctIndex": 0,
      "explanation": "टाइप I त्रुटि (अल्फा त्रुटि) तब होती है जब एक सही शून्य परिकल्पना को अस्वीकार कर दिया जाता है।"
    },
    {
      "id": 14,
      "question": "कोहलबर्ग के नैतिक विकास के सिद्धांत (Kohlberg's Theory of Moral Development) में 'पुरस्कार से बचने और आज्ञाकारिता के प्रति उन्मुखीकरण' किस स्तर से संबंधित है?",
      "options": ["पूर्व-पारंपरिक स्तर (Pre-conventional Level)", "पारंपरिक स्तर (Conventional Level)", "उत्तर-पारंपरिक स्तर (Post-conventional Level)", "स्व-स्वीकृत स्तर (Self-accepted Level)"],
      "correctIndex": 0,
      "explanation": "पूर्व-पारंपरिक स्तर में बच्चा सज़ा से बचने और पुरस्कार प्राप्त करने के आधार पर नैतिक निर्णय लेता है।"
    },
    {
      "id": 15,
      "question": "शिक्षा में 'प्रगतिवाद' (Progressivism) के जनक कौन माने जाते हैं?",
      "options": ["प्लेटो (Plato)", "जॉन डीवी (John Dewey)", "रवींद्रनाथ टैगोर (Rabindranath Tagore)", "स्वामी विवेकानंद (Swami Vivekananda)"],
      "correctIndex": 1,
      "explanation": "जॉन डीवी को प्रगतिवाद का जनक माना जाता है, जो 'करके सीखने' (Learning by Doing) और छात्र-केंद्रित पाठ्यक्रम पर जोर देता है।"
    },
    {
      "id": 16,
      "question": "शैक्षिक प्रशासन में 'पीओएसडीकॉर्ब' (POSDCORB) का सूत्र किसने दिया?",
      "options": ["एफ.डब्ल्यू. टेलर (F.W. Taylor)", "हेनरी फेयोल (Henri Fayol)", "लूथर गुलिक और उर्विक (Luther Gulick and Urwick)", "मैक्स वेबर (Max Weber)"],
      "correctIndex": 2,
      "explanation": "लूथर गुलिक और उर्विक ने 'पीओएसडीकॉर्ब' का सिद्धांत दिया, जिसका अर्थ है: योजना (Planning), आयोजन (Organizing), स्टाफिंग (Staffing), निर्देशन (Directing), समन्वय (Coordinating), रिपोर्टिंग (Reporting), और बजटिंग (Budgeting)।"
    },
    {
      "id": 17,
      "question": "शैक्षिक प्रौद्योगिकी में, 'सिस्टम दृष्टिकोण' (System Approach) क्या है?",
      "options": ["केवल कंप्यूटर का उपयोग करना", "कक्षा में शिक्षक की भूमिका को नकारना", "शिक्षा के सभी घटकों (इनपुट, प्रक्रिया, आउटपुट) को परस्पर संबंधित मानकर उनका विश्लेषण करना", "केवल पुस्तकालय संसाधनों पर निर्भर रहना"],
      "correctIndex": 2,
      "explanation": "सिस्टम दृष्टिकोण शैक्षिक प्रक्रिया को एक प्रणाली के रूप में देखता है जहाँ सभी भाग (जैसे लक्ष्य, सामग्री, विधियाँ, मूल्यांकन) एक-दूसरे पर निर्भर करते हैं।"
    },
    {
      "id": 18,
      "question": "शैक्षिक अवसरों की समानता (Equality of Educational Opportunity) का अर्थ क्या है?",
      "options": ["सभी के लिए एक ही स्कूल", "सभी छात्रों को समान ग्रेड देना", "प्रत्येक छात्र को उसकी योग्यता और क्षमता के अनुसार शिक्षा प्राप्त करने का अवसर देना", "निजी स्कूलों पर प्रतिबंध लगाना"],
      "correctIndex": 2,
      "explanation": "समानता का अर्थ है कि पृष्ठभूमि की परवाह किए बिना, सभी छात्रों को उनकी क्षमता को अधिकतम करने के लिए आवश्यक समर्थन और अवसर प्रदान किए जाएं।"
    },
    {
      "id": 19,
      "question": "किस आयोग/समिति ने 'दस-वर्षीय स्कूल' (10+2+3) की संरचना की सिफारिश की?",
      "options": ["कोठारी आयोग (Kothari Commission, 1964-66)", "राधाकृष्णन आयोग (Radhakrishnan Commission, 1948-49)", "यशपाल समिति (Yashpal Committee, 1993)", "राष्ट्रीय शिक्षा नीति 1986 (NPE 1986)"],
      "correctIndex": 0,
      "explanation": "कोठारी आयोग (1964-66) ने शिक्षा की राष्ट्रीय प्रणाली के रूप में 10+2+3 संरचना की सिफारिश की।"
    },
    {
      "id": 20,
      "question": "मानसिक स्वास्थ्य (Mental Health) का अर्थ क्या है?",
      "options": ["केवल शारीरिक बीमारी का न होना", "जीवन की चुनौतियों का सामना करने की क्षमता और भावनात्मक कल्याण", "उच्च शैक्षणिक योग्यता प्राप्त करना", "आर्थिक रूप से स्थिर होना"],
      "correctIndex": 1,
      "explanation": "मानसिक स्वास्थ्य में भावनात्मक, मनोवैज्ञानिक और सामाजिक कल्याण शामिल है; यह जीवन की चुनौतियों का सामना करने की व्यक्ति की क्षमता को प्रभावित करता है।"
    },
    {
      "id": 21,
      "question": "शोध में 'चर' (Variable) का कौन सा प्रकार शोधकर्ता द्वारा 'हेरफेर' (Manipulated) किया जाता है?",
      "options": ["आश्रित चर (Dependent Variable)", "स्वतंत्र चर (Independent Variable)", "मध्यस्थ चर (Intervening Variable)", "बाह्य चर (Extraneous Variable)"],
      "correctIndex": 1,
      "explanation": "स्वतंत्र चर (Independent Variable) वह है जिसमें शोधकर्ता प्रभाव देखने के लिए हेरफेर (बदलाव) करता है।"
    },
    {
      "id": 22,
      "question": "बुद्धि (Intelligence) का 'बहु-कारक सिद्धांत' (Multiple Factor Theory) किसने दिया?",
      "options": ["चार्ल्स स्पीयरमैन (Charles Spearman)", "एल.एल. थर्स्टन (L.L. Thurstone)", "जे.पी. गिलफोर्ड (J.P. Guilford)", "हॉवर्ड गार्डनर (Howard Gardner)"],
      "correctIndex": 1,
      "explanation": "एल.एल. थर्स्टन ने प्राथमिक मानसिक क्षमताओं (Primary Mental Abilities) के रूप में बुद्धि के सात अलग-अलग कारकों का वर्णन किया।"
    },
    {
      "id": 23,
      "question": "विद्यालयी पाठ्यक्रम (School Curriculum) के निर्माण का 'बाल-केंद्रित दृष्टिकोण' किस पर ज़ोर देता है?",
      "options": ["शिक्षक की सुविधा", "परीक्षा के अंक", "बच्चे की आवश्यकताएँ, रुचियाँ और क्षमताएँ", "सरकारी नियम"],
      "correctIndex": 2,
      "explanation": "बाल-केंद्रित दृष्टिकोण बच्चे की व्यक्तिगत आवश्यकताओं, रुचियों और क्षमताओं को पाठ्यक्रम विकास के केंद्र में रखता है।"
    },
    {
      "id": 24,
      "question": "प्रतिक्रिया (Feedback) को तुरंत सुदृढ़ करने के लिए कौन सा शिक्षण उपकरण सबसे प्रभावी है?",
      "options": ["ब्लैकबोर्ड", "पावरपॉइंट प्रेजेंटेशन", "इंटरैक्टिव व्हाइटबोर्ड", "प्रोग्राम्ड इंस्ट्रक्शन"],
      "correctIndex": 3,
      "explanation": "प्रोग्राम्ड इंस्ट्रक्शन (Programmed Instruction) स्किनर के सक्रिय अनुबंधन सिद्धांत पर आधारित है, जो तुरंत प्रतिक्रिया और सुदृढीकरण प्रदान करता है।"
    },
    {
      "id": 25,
      "question": "शैक्षिक नियोजन (Educational Planning) का सबसे बुनियादी चरण क्या है?",
      "options": ["वित्तीय संसाधन जुटाना", "लक्ष्यों और उद्देश्यों का निर्धारण", "परियोजनाओं का क्रियान्वयन", "योजना का मूल्यांकन"],
      "correctIndex": 1,
      "explanation": "किसी भी नियोजन का पहला और बुनियादी चरण वांछित लक्ष्यों और उद्देश्यों को परिभाषित करना होता है।"
    },
    {
      "id": 26,
      "question": "योग शिक्षा (Yoga Education) का प्रमुख उद्देश्य क्या है?",
      "options": ["केवल शारीरिक शक्ति बढ़ाना", "केवल आसन सिखाना", "शारीरिक, मानसिक और आध्यात्मिक विकास में समन्वय स्थापित करना", "रोजगार प्रदान करना"],
      "correctIndex": 2,
      "explanation": "योग का अंतिम लक्ष्य व्यक्ति के समग्र (शारीरिक, मानसिक, आध्यात्मिक) विकास और समन्वय को प्राप्त करना है।"
    },
    {
      "id": 27,
      "question": "मापन (Measurement) के किस स्तर पर 'वास्तविक शून्य बिंदु' (True Zero Point) होता है?",
      "options": ["नामांकित (Nominal)", "क्रमसूचक (Ordinal)", "अंतराल (Interval)", "अनुपात (Ratio)"],
      "correctIndex": 3,
      "explanation": "अनुपात स्तर (Ratio Scale) में एक वास्तविक शून्य बिंदु होता है, जिसका अर्थ है 'कुछ भी नहीं' की अनुपस्थिति।"
    },
    {
      "id": 28,
      "question": "कोठारी आयोग (1964-66) की रिपोर्ट का शीर्षक क्या था?",
      "options": ["विश्वविद्यालयी शिक्षा की समस्याएँ", "शिक्षा और राष्ट्रीय विकास (Education and National Development)", "स्कूल चलो अभियान", "शिक्षकों की स्थिति"],
      "correctIndex": 1,
      "explanation": "कोठारी आयोग (1964-66) की रिपोर्ट का शीर्षक 'शिक्षा और राष्ट्रीय विकास' था।"
    },
    {
      "id": 29,
      "question": "समूह गतिकी (Group Dynamics) में 'समूह संसक्ति' (Group Cohesiveness) का क्या अर्थ है?",
      "options": ["समूह के सदस्यों के बीच लड़ाई", "समूह के लक्ष्यों की उपेक्षा करना", "सदस्यों के बीच आकर्षण और एकता की भावना", "केवल बाहरी दबाव के कारण एकजुट होना"],
      "correctIndex": 2,
      "explanation": "समूह संसक्ति वह डिग्री है जिस तक सदस्य समूह के प्रति आकर्षित होते हैं और एक साथ रहने के लिए प्रेरित होते हैं।"
    },
    {
      "id": 30,
      "question": "विकासात्मक मनोविज्ञान (Developmental Psychology) में 'प्रॉक्सिमोडिस्टल सिद्धांत' (Proximodistal Principle) का क्या अर्थ है?",
      "options": ["सिर से पैर तक विकास", "शरीर के केंद्र से परिधि (बाहरी) की ओर विकास", "विकास लगातार होता है", "विकास एक चरणबद्ध प्रक्रिया है"],
      "correctIndex": 1,
      "explanation": "प्रॉक्सिमोडिस्टल सिद्धांत बताता है कि विकास रीढ़ (केंद्र) से शुरू होता है और हाथों और पैरों (परिधि) तक फैलता है।"
    },
    // Adding more questions (31-100) based on typical UGC NET topics
    {
      "id": 31,
      "question": "रैखिक प्रोग्रामिंग (Linear Programming) और ब्रांचिंग प्रोग्रामिंग (Branching Programming) किस प्रकार के अनुदेशन के उदाहरण हैं?",
      "options": ["प्रोग्राम्ड इंस्ट्रक्शन (Programmed Instruction)", "कंप्यूटर असिस्टेड इंस्ट्रक्शन (CAI)", "इंटरैक्टिव वीडियो", "सिमुलेशन"],
      "correctIndex": 0,
      "explanation": "बी.एफ. स्किनर ने रैखिक प्रोग्रामिंग और नॉर्मन क्रॉडर ने ब्रांचिंग प्रोग्रामिंग (या इंट्रिंसिक प्रोग्रामिंग) को प्रोग्राम्ड इंस्ट्रक्शन के तहत विकसित किया।"
    },
    {
      "id": 32,
      "question": "माइक्रोसॉफ्ट पावरप्वाइंट, गूगल स्लाइड्स जैसे उपकरण शिक्षण के किस प्रकार के सहायक सामग्री में आते हैं?",
      "options": ["श्रव्य-सहायता", "दृश्य-सहायता", "श्रव्य-दृश्य-सहायता", "प्रिंट सामग्री"],
      "correctIndex": 1,
      "explanation": "प्रेजेंटेशन सॉफ़्टवेयर मुख्य रूप से दृश्य सामग्री (Visual Aids) प्रस्तुत करने के लिए उपयोग किए जाते हैं।"
    },
    {
      "id": 33,
      "question": "प्रबंधन (Management) में, 'एमबीओ' (MBO) का पूर्ण रूप क्या है?",
      "options": ["मैनेंजमेंट बाय ऑब्जेक्टिव्स (Management by Objectives)", "मैक्सिमम बिज़नेस आउटपुट (Maximum Business Output)", "मेथड बेस्ड ऑर्गेनाइजेशन (Method Based Organization)", "मॉडर्न बजटिंग ऑपरेशन (Modern Budgeting Operation)"],
      "correctIndex": 0,
      "explanation": "एमबीओ (Management by Objectives) एक प्रबंधन रणनीति है जहां प्रबंधक और कर्मचारी मिलकर लक्ष्यों को परिभाषित करते हैं और उनके अनुसार प्रदर्शन का मूल्यांकन करते हैं।"
    },
    {
      "id": 34,
      "question": "किस दर्शनशास्त्री ने 'शिक्षा को मनुष्य और समाज के निर्माण' (Making of Man and Society) के रूप में देखा?",
      "options": ["रूसो (Rousseau)", "रवींद्रनाथ टैगोर (Rabindranath Tagore)", "अरबिंदो घोष (Aurobindo Ghosh)", "महात्मा गांधी (Mahatma Gandhi)"],
      "correctIndex": 3,
      "explanation": "महात्मा गांधी ने शिक्षा को एक ऐसा साधन माना जिससे एक संतुलित और आत्मनिर्भर व्यक्ति (मनुष्य) और समाज का निर्माण होता है (बुनियादी शिक्षा/नई तालीम)।"
    },
    {
      "id": 35,
      "question": "शोध में 'साहित्य की समीक्षा' (Review of Literature) का मुख्य उद्देश्य क्या है?",
      "options": ["केवल पहले किए गए शोधों की प्रतिलिपि बनाना", "अध्ययन के लिए एक सैद्धांतिक ढांचा (Theoretical Framework) प्रदान करना और अनुसंधान अंतराल (Research Gap) की पहचान करना", "शोधकर्ता को भ्रमित करना", "एक लंबी रिपोर्ट बनाना"],
      "correctIndex": 1,
      "explanation": "साहित्य की समीक्षा शोधकर्ता को विषय की पृष्ठभूमि, वर्तमान ज्ञान और 'अज्ञात' (शोध अंतराल) को जानने में मदद करती है।"
    },
    {
      "id": 36,
      "question": "व्यक्तित्व (Personality) के 'ट्रेड सिद्धांत' (Trait Theory) से कौन संबंधित है?",
      "options": ["सिगमंड फ्रायड (Sigmund Freud)", "कार्ल रोजर्स (Carl Rogers)", "गॉर्डन आलपोर्ट (Gordon Allport)", "इवान पावलोव (Ivan Pavlov)"],
      "correctIndex": 2,
      "explanation": "गॉर्डन आलपोर्ट व्यक्तित्व के ट्रेड सिद्धांत के अग्रदूतों में से एक थे, जिन्होंने केंद्रीय, प्रमुख और द्वितीयक ट्रेड्स का वर्णन किया।"
    },
    {
      "id": 37,
      "question": "राष्ट्रीय ज्ञान आयोग (National Knowledge Commission - NKC) का गठन किस वर्ष किया गया था?",
      "options": ["2005", "1986", "1992", "2010"],
      "correctIndex": 0,
      "explanation": "राष्ट्रीय ज्ञान आयोग का गठन 2005 में सैम पित्रोदा की अध्यक्षता में किया गया था, जिसका उद्देश्य ज्ञान-आधारित अर्थव्यवस्था के लिए भारत को तैयार करना था।"
    },
    {
      "id": 38,
      "question": "सीखने की प्रक्रिया में 'अंतर्दृष्टि' (Insight) पर किस सिद्धांतकार ने जोर दिया?",
      "options": ["थॉर्नडाइक (Thorndike)", "कोहलर (Kohler)", "पावलोव (Pavlov)", "स्किनर (Skinner)"],
      "correctIndex": 1,
      "explanation": "गेस्टाल्ट मनोवैज्ञानिकों (कोहलर, कोफ्का) ने अंतर्दृष्टि सिद्धांत दिया, जिसमें अधिगम समस्या के अचानक और पूर्ण समाधान के रूप में होता है।"
    },
    {
      "id": 39,
      "question": "एक स्कूल में शिक्षक का वेतन किस प्रकार के वित्त पोषण (Financing) का उदाहरण है?",
      "options": ["पूंजीगत व्यय (Capital Expenditure)", "आवर्ती/राजस्व व्यय (Recurring/Revenue Expenditure)", "अप्रत्याशित व्यय (Contingency Expenditure)", "गैर-योजना व्यय (Non-Plan Expenditure)"],
      "correctIndex": 1,
      "explanation": "वेतन जैसे दैनिक/मासिक खर्च आवर्ती या राजस्व व्यय के तहत आते हैं।"
    },
    {
      "id": 40,
      "question": "शिक्षा में 'मात्रात्मक शोध' (Quantitative Research) की मुख्य विशेषता क्या है?",
      "options": ["व्याख्यात्मक और अर्थ-खोज (Interpretive and meaning-seeking)", "संख्यात्मक डेटा संग्रह और सांख्यिकीय विश्लेषण", "गहन व्यक्तिगत साक्षात्कार", "लचीला अभिकल्प (Flexible Design)"],
      "correctIndex": 1,
      "explanation": "मात्रात्मक शोध संख्यात्मक डेटा एकत्र करता है और सांख्यिकीय तरीकों का उपयोग करके सामान्यीकरण (Generalization) करने का प्रयास करता है।"
    },
    {
      "id": 41,
      "question": "'मस्तिष्क उद्देलन' (Brainstorming) का मुख्य उद्देश्य क्या है?",
      "options": ["केवल आलोचना करना", "समस्या का केवल एक ही समाधान खोजना", "रचनात्मक और मुक्त विचारों का उत्पादन करना", "पुरानी जानकारी को याद करना"],
      "correctIndex": 2,
      "explanation": "मस्तिष्क उद्देलन (Brainstorming) एक समूह रचनात्मकता तकनीक है जिसका उद्देश्य विचारों की एक बड़ी संख्या उत्पन्न करना है।"
    },
    {
      "id": 42,
      "question": "शिक्षा के किस दर्शन में 'परियोजना पद्धति' (Project Method) का उपयोग करने पर ज़ोर दिया गया है?",
      "options": ["आदर्शवाद (Idealism)", "यथार्थवाद (Realism)", "व्यवहारवाद/प्रयोजनवाद (Pragmatism)", "अस्तित्ववाद (Existentialism)"],
      "correctIndex": 2,
      "explanation": "प्रयोजनवाद (Pragmatism), जॉन डीवी से जुड़ा हुआ, 'करके सीखने' पर जोर देता है, और परियोजना पद्धति इसका एक उत्कृष्ट उदाहरण है।"
    },
    {
      "id": 43,
      "question": "मानसिक स्वास्थ्य में 'समायोजन' (Adjustment) का अर्थ क्या है?",
      "options": ["हमेशा दूसरों को नियंत्रित करना", "वातावरण की आवश्यकताओं को पूरा करने के लिए व्यवहार को बदलना", "अपनी सभी इच्छाओं को दबाना", "अकेले रहना"],
      "correctIndex": 1,
      "explanation": "समायोजन वह प्रक्रिया है जिसके द्वारा एक व्यक्ति अपनी आवश्यकताओं और पर्यावरण की मांगों के बीच संतुलन स्थापित करता है।"
    },
    {
      "id": 44,
      "question": "शैक्षिक शोध में 'प्रमाणीकरण' (Standardization) का क्या महत्व है?",
      "options": ["परीक्षण की लागत को कम करना", "परीक्षण की वैधता (Validity) और विश्वसनीयता (Reliability) सुनिश्चित करना", "परीक्षण को आसान बनाना", "केवल एक ही छात्र पर लागू करना"],
      "correctIndex": 1,
      "explanation": "प्रमाणीकरण (एकसमान प्रक्रिया) यह सुनिश्चित करता है कि परीक्षण वैध, विश्वसनीय हो और एक बड़े समूह पर लागू किया जा सके।"
    },
    {
      "id": 45,
      "question": "राष्ट्रीय शिक्षा नीति (NEP) 2020 में प्रस्तावित नई शैक्षिक संरचना क्या है?",
      "options": ["10+2+3", "5+3+3+4", "4+3+3+5", "10+5"],
      "correctIndex": 1,
      "explanation": "एनईपी 2020 ने 10+2 संरचना को 5 (आधारभूत) + 3 (प्रारंभिक) + 3 (मध्य) + 4 (माध्यमिक) संरचना से प्रतिस्थापित करने का प्रस्ताव दिया।"
    },
    {
      "id": 46,
      "question": "शिक्षकों के लिए 'सेवाकालीन प्रशिक्षण' (In-service Training) का मुख्य उद्देश्य क्या है?",
      "options": ["वेतन बढ़ाना", "नई शिक्षण विधियों और ज्ञान के साथ शिक्षकों को अद्यतन करना (Upgrading)", "शिक्षण कार्य कम करना", "केवल अवकाश प्रदान करना"],
      "correctIndex": 1,
      "explanation": "सेवाकालीन प्रशिक्षण शिक्षकों को अपनी दक्षता, ज्ञान और कौशल को नवीनतम प्रवृत्तियों के साथ अद्यतन करने में मदद करता है।"
    },
    {
      "id": 47,
      "question": "प्रगतिशील शिक्षा (Progressive Education) में मूल्यांकन (Evaluation) का सबसे अच्छा तरीका क्या है?",
      "options": ["केवल वर्ष के अंत में परीक्षा", "मानकीकृत वस्तुनिष्ठ परीक्षण", "परियोजना कार्य, अवलोकन, पोर्टफोलियो और निरंतर मूल्यांकन", "केवल मौखिक परीक्षा"],
      "correctIndex": 2,
      "explanation": "प्रगतिशील शिक्षा व्यापक और निरंतर मूल्यांकन पर ज़ोर देती है जिसमें विभिन्न तरीके (परियोजना, पोर्टफोलियो) शामिल होते हैं।"
    },
    {
      "id": 48,
      "question": "शिक्षा में 'प्रौद्योगिकी' (Technology) का 'हार्डवेयर दृष्टिकोण' (Hardware Approach) क्या है?",
      "options": ["सिद्धांतों और विचारों का उपयोग", "मशीनों, उपकरणों (जैसे कंप्यूटर, प्रोजेक्टर) का उपयोग", "शिक्षण विधियों का उपयोग", "पाठ्यक्रम डिजाइन"],
      "correctIndex": 1,
      "explanation": "हार्डवेयर दृष्टिकोण में भौतिक उपकरणों और मशीनों का उपयोग शामिल है, जबकि सॉफ्टवेयर दृष्टिकोण शिक्षण/अधिगम सिद्धांतों पर केंद्रित है।"
    },
    {
      "id": 49,
      "question": "शोध में 'अध्ययन की जनसंख्या' (Population of Study) से क्या तात्पर्य है?",
      "options": ["केवल छात्र", "वह समूह जिसके बारे में शोधकर्ता निष्कर्ष निकालना चाहता है", "केवल शोधकर्ता", "शोध में उपयोग की जाने वाली पुस्तकों की संख्या"],
      "correctIndex": 1,
      "explanation": "जनसंख्या वह संपूर्ण समूह है जिसके बारे में शोधकर्ता निष्कर्ष निकालने या सामान्यीकरण करने में रुचि रखता है।"
    },
    {
      "id": 50,
      "question": "अधिगम (Learning) का वह सिद्धांत जो 'प्रयास और त्रुटि' (Trial and Error) पर आधारित है?",
      "options": ["क्लासिकल कंडीशनिंग (Classical Conditioning)", "ऑपरेंट कंडीशनिंग (Operant Conditioning)", "अंतर्दृष्टि अधिगम (Insight Learning)", "कनेक्शनिज़्म/संबंधवाद (Connectionism)"],
      "correctIndex": 3,
      "explanation": "ई.एल. थॉर्नडाइक का कनेक्शनिज़्म प्रयास और त्रुटि अधिगम पर ज़ोर देता है, जिससे 'सीखने के नियम' (Laws of Learning) निकले।"
    },
    {
      "id": 51,
      "question": "पाठ्यक्रम (Curriculum) और पाठ्यचर्या (Syllabus) के बीच मुख्य अंतर क्या है?",
      "options": ["कोई अंतर नहीं है", "पाठ्यक्रम व्यापक है और विद्यालय के सभी अनुभवों को शामिल करता है, जबकि पाठ्यचर्या किसी विशेष विषय का सार है", "पाठ्यचर्या व्यापक है", "पाठ्यक्रम केवल सैद्धांतिक पहलू है"],
      "correctIndex": 1,
      "explanation": "पाठ्यक्रम (Curriculum) एक व्यापक अवधारणा है जो स्कूल में छात्र के सभी अनुभवों को शामिल करती है, जबकि पाठ्यचर्या (Syllabus) किसी विशेष विषय या कोर्स का विवरण है।"
    },
    {
      "id": 52,
      "question": "शिक्षा का वह दर्शन जो 'मनुष्य के आत्म-अस्तित्व' और 'चयन की स्वतंत्रता' पर ज़ोर देता है?",
      "options": ["आदर्शवाद (Idealism)", "यथार्थवाद (Realism)", "प्रकृतिवाद (Naturalism)", "अस्तित्ववाद (Existentialism)"],
      "correctIndex": 3,
      "explanation": "अस्तित्ववाद व्यक्ति की स्वतंत्रता, आत्म-परिभाषा और व्यक्तिगत पसंद के प्रति जिम्मेदारी पर ज़ोर देता है।"
    },
    {
      "id": 53,
      "question": "जीन पियाजे के संज्ञानात्मक विकास के सिद्धांत में 'वस्तु स्थायित्व' (Object Permanence) की समझ किस चरण में विकसित होती है?",
      "options": ["संवेदी-गामक चरण (Sensorimotor Stage)", "पूर्व-संक्रियात्मक चरण (Pre-operational Stage)", "मूर्त संक्रियात्मक चरण (Concrete Operational Stage)", "अमूर्त संक्रियात्मक चरण (Formal Operational Stage)"],
      "correctIndex": 0,
      "explanation": "वस्तु स्थायित्व की समझ (एक वस्तु का अस्तित्व तब भी होता है जब वह दृष्टि से बाहर हो) संवेदी-गामक चरण के अंत में विकसित होती है।"
    },
    {
      "id": 54,
      "question": "शोध में 'बाह्य वैधता' (External Validity) का क्या अर्थ है?",
      "options": ["शोध उपकरणों की सटीकता", "शोध उपकरणों की स्थिरता", "अध्ययन के परिणामों को अन्य जनसंख्या और सेटिंग्स पर सामान्यीकृत करने की सीमा", "शोध उपकरणों का उपयोग करना"],
      "correctIndex": 2,
      "explanation": "बाह्य वैधता यह बताती है कि किसी अध्ययन के निष्कर्षों को अध्ययन के दायरे से बाहर (जनसंख्या और सेटिंग्स) कितनी अच्छी तरह से लागू किया जा सकता है।"
    },
    {
      "id": 55,
      "question": "परीक्षण की 'विश्वसनीयता' (Reliability) से क्या अभिप्राय है?",
      "options": ["परीक्षण का उद्देश्य मापना", "माप की निरंतरता और स्थिरता", "परीक्षण की लागत", "परीक्षण की गति"],
      "correctIndex": 1,
      "explanation": "विश्वसनीयता यह बताती है कि यदि एक ही परीक्षण को विभिन्न समय पर दोहराया जाता है तो परिणाम कितने सुसंगत और स्थिर होते हैं।"
    },
    {
      "id": 56,
      "question": "भारत में उच्च शिक्षा के लिए वित्त पोषण (Financing) का प्रमुख स्रोत कौन सा है?",
      "options": ["छात्र शुल्क", "विश्वविद्यालय अनुदान आयोग (UGC)", "निजी दान", "गैर सरकारी संगठन (NGOs)"],
      "correctIndex": 1,
      "explanation": "विश्वविद्यालय अनुदान आयोग (UGC) भारत में उच्च शिक्षा के वित्त पोषण (केन्द्रीय फंडिंग) और समन्वय के लिए प्रमुख वैधानिक निकाय है।"
    },
    {
      "id": 57,
      "question": "समावेशी शिक्षा में 'बाधाएँ' (Barriers) क्या हैं?",
      "options": ["शिक्षक का प्रशिक्षण", "अनुकूलनीय पाठ्यक्रम", "अगम्यता (Inaccessible) वाली इमारतें और नकारात्मक दृष्टिकोण", "सहकर्मी शिक्षण (Peer Learning)"],
      "correctIndex": 2,
      "explanation": "अगम्यता वाली भौतिक संरचनाएं और विकलांग व्यक्तियों के प्रति नकारात्मक दृष्टिकोण समावेशी शिक्षा के लिए प्रमुख बाधाएँ हैं।"
    },
    {
      "id": 58,
      "question": "'क्रियात्मक शोध' (Action Research) का मुख्य उद्देश्य क्या है?",
      "options": ["बड़ी जनसंख्या के लिए सिद्धांत विकसित करना", "विद्यालय/कक्षा की विशिष्ट, तत्काल समस्या को हल करना", "ऐतिहासिक घटनाओं का पता लगाना", "वैज्ञानिक उपकरणों का विकास करना"],
      "correctIndex": 1,
      "explanation": "क्रियात्मक शोध शिक्षक या प्रशासक द्वारा अपनी स्थानीय, तत्काल, व्यावहारिक समस्याओं को हल करने के लिए किया जाता है।"
    },
    {
      "id": 59,
      "question": "ई-लर्निंग में 'सिंक्रोनस' (Synchronous) और 'असिंक्रोनस' (Asynchronous) अधिगम में क्या अंतर है?",
      "options": ["सिंक्रोनस ऑफ़लाइन है और असिंक्रोनस ऑनलाइन है", "सिंक्रोनस एक ही समय में होता है (लाइव क्लास) और असिंक्रोनस अलग-अलग समय पर (रिकॉर्डेड लेक्चर)", "सिंक्रोनस महंगा है और असिंक्रोनस सस्ता है", "कोई अंतर नहीं"],
      "correctIndex": 1,
      "explanation": "सिंक्रोनस (जैसे लाइव वेबिनार) वास्तविक समय में होता है; असिंक्रोनस (जैसे ईमेल, रिकॉर्डेड वीडियो) अलग-अलग समय पर होता है।"
    },
    {
      "id": 60,
      "question": "मानवाधिकार शिक्षा (Human Rights Education) का मुख्य उद्देश्य क्या है?",
      "options": ["केवल कानून के बारे में पढ़ाना", "व्यक्तियों को उनके अधिकारों और जिम्मेदारियों के बारे में जागरूक करना और उनका सम्मान करना सिखाना", "केवल राजनीतिक ज्ञान देना", "इतिहास पढ़ाना"],
      "correctIndex": 1,
      "explanation": "मानवाधिकार शिक्षा का उद्देश्य व्यक्तियों को उनके मानवाधिकारों को समझने, उनका सम्मान करने और उनकी रक्षा करने के लिए तैयार करना है।"
    },
    {
      "id": 61,
      "question": "माध्य, माध्यिका और बहुलक 'सामान्य वितरण वक्र' (Normal Distribution Curve) में कहाँ पर स्थित होते हैं?",
      "options": ["वे अलग-अलग बिंदुओं पर स्थित होते हैं", "वे एक ही बिंदु पर (केंद्र) स्थित होते हैं", "माध्यिका हमेशा बहुलक से बड़ा होता है", "माध्य हमेशा बहुलक से छोटा होता है"],
      "correctIndex": 1,
      "explanation": "एक सामान्य वितरण वक्र में माध्य, माध्यिका और बहुलक का मान समान होता है और वे वक्र के केंद्र में स्थित होते हैं।"
    },
    {
      "id": 62,
      "question": "शैक्षिक पर्यवेक्षण (Educational Supervision) का आधुनिक दृष्टिकोण किस पर केंद्रित है?",
      "options": ["शिक्षकों की गलतियाँ ढूँढना", "शिक्षकों को आदेश देना", "शिक्षण-अधिगम प्रक्रिया में सुधार के लिए रचनात्मक मार्गदर्शन और सहयोग", "केवल प्रशासनिक नियंत्रण"],
      "correctIndex": 2,
      "explanation": "आधुनिक पर्यवेक्षण सहयोगपूर्ण और विकासात्मक (Developmental) है, जिसका उद्देश्य शिक्षण-अधिगम प्रक्रिया की गुणवत्ता में सुधार करना है।"
    },
    {
      "id": 63,
      "question": "व्यक्तित्व के आकलन के लिए 'रोर्शा स्याही धब्बा परीक्षण' (Rorschach Inkblot Test) किस प्रकार का परीक्षण है?",
      "options": ["वस्तुनिष्ठ परीक्षण (Objective Test)", "मानकीकृत उपलब्धि परीक्षण (Standardized Achievement Test)", "प्रक्षेपी तकनीक (Projective Technique)", "स्व-रिपोर्ट इन्वेंटरी (Self-Report Inventory)"],
      "correctIndex": 2,
      "explanation": "यह एक प्रक्षेपी तकनीक है जहां व्यक्ति की प्रतिक्रियाओं को उसके अवचेतन व्यक्तित्व को प्रकट करने के लिए माना जाता है।"
    },
    {
      "id": 64,
      "question": "किस आयोग ने 'शिक्षण को राष्ट्रीय विकास का केंद्रबिंदु' (Central to National Development) कहा?",
      "options": ["राधाकृष्णन आयोग", "मुदालियर आयोग", "कोठारी आयोग", "यशपाल समिति"],
      "correctIndex": 2,
      "explanation": "कोठारी आयोग (1964-66) की रिपोर्ट का शीर्षक ही 'शिक्षा और राष्ट्रीय विकास' था, जिसने शिक्षा को राष्ट्र के भाग्य के निर्माण का केंद्रीय कारक बताया।"
    },
    {
      "id": 65,
      "question": "'शिक्षण की दक्षता' (Teaching Efficiency) का सबसे महत्वपूर्ण संकेतक क्या है?",
      "options": ["शिक्षक का अनुभव", "छात्रों का उपलब्धि स्तर और विकास", "शिक्षक की उपस्थिति", "शिक्षक का वेतन"],
      "correctIndex": 1,
      "explanation": "शिक्षण की दक्षता का अंतिम और सबसे महत्वपूर्ण उपाय छात्रों के अधिगम (Learning), उपलब्धि और समग्र विकास में वृद्धि है।"
    },
    {
      "id": 66,
      "question": "शिक्षा में 'दूरस्थ शिक्षा' (Distance Education) की मुख्य विशेषता क्या है?",
      "options": ["शिक्षक और शिक्षार्थी के बीच आमने-सामने की बातचीत", "शिक्षक और शिक्षार्थी समय और स्थान से अलग होते हैं", "केवल व्यावसायिक पाठ्यक्रम प्रदान करना", "केवल सरकारी संस्थानों द्वारा चलाया जाना"],
      "correctIndex": 1,
      "explanation": "दूरस्थ शिक्षा (Distance Education) में शिक्षक और शिक्षार्थी अलग-अलग स्थानों पर होते हैं और विभिन्न माध्यमों (प्रिंट, ऑनलाइन) से सीखते हैं।"
    },
    {
      "id": 67,
      "question": "अनुसंधान में 'गुणात्मक उपागम' (Qualitative Approach) के तहत कौन सी विधि आती है?",
      "options": ["सर्वेक्षण (Survey)", "प्रायोगिक (Experimental)", "जातीयता-वर्णन (Ethnography)", "सहसंबंध (Correlation)"],
      "correctIndex": 2,
      "explanation": "जातीयता-वर्णन (Ethnography) एक गुणात्मक शोध पद्धति है जिसका उपयोग विशिष्ट संस्कृति या सामाजिक समूह का गहन अध्ययन करने के लिए किया जाता है।"
    },
    {
      "id": 68,
      "question": "किस प्रकार का मापन केवल 'वर्गीकरण' (Classification) पर आधारित है और इसमें कोई क्रम नहीं होता?",
      "options": ["नामांकित (Nominal)", "क्रमसूचक (Ordinal)", "अंतराल (Interval)", "अनुपात (Ratio)"],
      "correctIndex": 0,
      "explanation": "नामांकित (Nominal) माप सबसे निम्नतम स्तर का है और केवल चरों को वर्गीकृत करने के लिए उपयोग किया जाता है (जैसे लिंग, धर्म)।"
    },
    {
      "id": 69,
      "question": "शिक्षा के किस दर्शन के अनुसार 'बच्चों को प्रकृति की गोद में' बिना किसी बाहरी हस्तक्षेप के बढ़ने देना चाहिए?",
      "options": ["आदर्शवाद (Idealism)", "प्रकृतिवाद (Naturalism)", "यथार्थवाद (Realism)", "मानवतावाद (Humanism)"],
      "correctIndex": 1,
      "explanation": "प्रकृतिवाद (Naturalism), रूसो से जुड़ा हुआ, मानता है कि बच्चे को प्रकृति के नियमों के अनुसार विकसित होने दिया जाना चाहिए।"
    },
    {
      "id": 70,
      "question": "सीखने में 'सुदृढीकरण' (Reinforcement) की अवधारणा किस सिद्धांत से संबंधित है?",
      "options": ["क्लासिकल कंडीशनिंग (Classical Conditioning)", "ऑपरेंट कंडीशनिंग (Operant Conditioning)", "सामाजिक अधिगम (Social Learning)", "संज्ञानात्मक अधिगम (Cognitive Learning)"],
      "correctIndex": 1,
      "explanation": "बी.एफ. स्किनर की ऑपरेंट कंडीशनिंग (सक्रिय अनुबंधन) में, सुदृढीकरण (सकारात्मक या नकारात्मक) भविष्य में व्यवहार की संभावना को बढ़ाता है।"
    },
    {
      "id": 71,
      "question": "राष्ट्रीय शिक्षा नीति 2020 में 'स्कूल कॉम्प्लेक्स' या 'स्कूल क्लस्टर' की अवधारणा का उद्देश्य क्या है?",
      "options": ["केवल बड़े स्कूल बनाना", "शिक्षा के प्रशासन, संसाधनों और शिक्षकों को साझा करने के लिए स्कूलों का समूहीकरण", "निजी स्कूलों को बंद करना", "शिक्षण कार्य कम करना"],
      "correctIndex": 1,
      "explanation": "स्कूल कॉम्प्लेक्स/क्लस्टर का उद्देश्य स्कूलों के बीच सहयोग को बढ़ावा देना और संसाधनों (शिक्षक, पुस्तकालय, खेल का मैदान) को साझा करके दक्षता बढ़ाना है।"
    },
    {
      "id": 72,
      "question": "विद्यालय प्रबंधन (School Management) में 'विकेंद्रीकरण' (Decentralization) का क्या अर्थ है?",
      "options": ["सभी निर्णय केंद्रीय प्राधिकरण द्वारा लेना", "निर्णय लेने की शक्ति को निचले स्तरों तक वितरित करना", "केवल प्राचार्य द्वारा निर्णय लेना", "निर्णय लेने की शक्ति को वापस लेना"],
      "correctIndex": 1,
      "explanation": "विकेंद्रीकरण में निर्णय लेने की शक्ति और जिम्मेदारी केंद्र से निचले स्तरों तक (जैसे शिक्षकों, स्थानीय समुदाय) वितरित की जाती है।"
    },
    {
      "id": 73,
      "question": "बुद्धि के 'जी और एस कारक' (G and S Factors) का सिद्धांत किसने दिया?",
      "options": ["एल.एल. थर्स्टन (L.L. Thurstone)", "चार्ल्स स्पीयरमैन (Charles Spearman)", "आर.बी. कैटेल (R.B. Cattell)", "जे.पी. गिलफोर्ड (J.P. Guilford)"],
      "correctIndex": 1,
      "explanation": "चार्ल्स स्पीयरमैन ने द्विकारक सिद्धांत दिया, जिसमें 'G' (सामान्य कारक) और 'S' (विशिष्ट कारक) शामिल हैं।"
    },
    {
      "id": 74,
      "question": "'बुनियादी शिक्षा' (Basic Education/Nai Talim) की अवधारणा किसने प्रतिपादित की?",
      "options": ["स्वामी विवेकानंद", "रवींद्रनाथ टैगोर", "महात्मा गांधी", "अरविंदो घोष"],
      "correctIndex": 2,
      "explanation": "बुनियादी शिक्षा महात्मा गांधी द्वारा प्रतिपादित की गई, जो 'हस्तकला केंद्रित शिक्षा' और मातृभाषा में शिक्षा पर ज़ोर देती है।"
    },
    {
      "id": 75,
      "question": "शोध में 'सहसंबंध गुणांक' (Correlation Coefficient) का मान -1.00 से +1.00 के बीच क्यों होता है?",
      "options": ["यह एक प्रायोगिक मान है", "यह चरों के बीच संबंध की शक्ति और दिशा को दर्शाता है", "यह केवल माध्य से संबंधित है", "यह एक यादृच्छिक मान है"],
      "correctIndex": 1,
      "explanation": "सहसंबंध गुणांक दो चरों के बीच रैखिक संबंध की शक्ति और दिशा को मापता है, जहां +1.00 एक मजबूत सकारात्मक संबंध और -1.00 एक मजबूत नकारात्मक संबंध दर्शाता है।"
    },
    {
      "id": 76,
      "question": "समायोजन तंत्र (Defense Mechanism) में 'दमन' (Repression) का क्या अर्थ है?",
      "options": ["अपनी गलती के लिए दूसरों को दोषी ठहराना", "अस्वीकार्य विचारों, यादों या इच्छाओं को अचेतन (Unconscious) मन में धकेलना", "तर्कसंगत व्याख्या देना", "बच्चों जैसा व्यवहार करना"],
      "correctIndex": 1,
      "explanation": "दमन फ्रायडियन मनोविश्लेषण में एक रक्षा तंत्र है, जहां चिंता पैदा करने वाली सामग्री को अचेतन में दबा दिया जाता है।"
    },
    {
      "id": 77,
      "question": "मानव विकास के संदर्भ में 'आनुवंशिकता' (Heredity) और 'वातावरण' (Environment) के बीच संबंध कैसा है?",
      "options": ["वे अलग-अलग काम करते हैं", "आनुवंशिकता वातावरण से अधिक महत्वपूर्ण है", "वे गुणात्मक रूप से परस्पर क्रिया करते हैं (Interactional)", "वातावरण आनुवंशिकता को निर्धारित करता है"],
      "correctIndex": 2,
      "explanation": "विकास आनुवंशिकता और वातावरण की परस्पर क्रिया (Interactional) का परिणाम है, जिसे $H \times E$ के रूप में दर्शाया जाता है।"
    },
    {
      "id": 78,
      "question": "स्कूल के 'वार्षिक कैलेंडर' (Annual Calendar) का मुख्य उद्देश्य क्या है?",
      "options": ["केवल छुट्टियों की सूची बनाना", "शैक्षिक और सह-पाठ्यचर्या संबंधी गतिविधियों के लिए समय का प्रभावी ढंग से आवंटन और योजना बनाना", "शिक्षकों को काम देना", "स्कूलों को बंद करना"],
      "correctIndex": 1,
      "explanation": "वार्षिक कैलेंडर शैक्षणिक वर्ष के दौरान सभी गतिविधियों की योजना बनाने और समय का प्रभावी ढंग से उपयोग करने में मदद करता है।"
    },
    {
      "id": 79,
      "question": "शिक्षा में 'सतत और व्यापक मूल्यांकन' (CCE) का उद्देश्य क्या है?",
      "options": ["केवल परीक्षा को आसान बनाना", "बच्चों के विकास के सभी पहलुओं (शैक्षणिक और सह-शैक्षणिक) का नियमित और समग्र मूल्यांकन करना", "केवल वर्ष के अंत में मूल्यांकन करना", "केवल शिक्षक का मूल्यांकन करना"],
      "correctIndex": 1,
      "explanation": "सीसीई बच्चे के विकास के सभी पहलुओं (मानसिक, भावनात्मक, शारीरिक) को स्कूल में और स्कूल के बाहर नियमित रूप से मूल्यांकन करता है।"
    },
    {
      "id": 80,
      "question": "शोध में 'गैर-प्राचलिक परीक्षण' (Non-Parametric Test) का उपयोग कब किया जाता है?",
      "options": ["जब जनसंख्या सामान्य रूप से वितरित होती है", "जब नमूना आकार बड़ा होता है", "जब चर नाममात्र (Nominal) या क्रमसूचक (Ordinal) माप स्तर पर होते हैं और सामान्य वितरण की पूर्वधारणा पूरी नहीं होती", "केवल अनुपात डेटा के लिए"],
      "correctIndex": 2,
      "explanation": "गैर-प्राचलिक परीक्षणों का उपयोग तब किया जाता है जब जनसंख्या वितरण के बारे में कोई कठोर धारणा नहीं बनाई जा सकती है, जैसे कि नाममात्र या क्रमसूचक डेटा के साथ।"
    },
    {
      "id": 81,
      "question": "थॉर्नडाइक के अधिगम के मुख्य नियमों में कौन सा शामिल नहीं है?",
      "options": ["तत्परता का नियम (Law of Readiness)", "अभ्यास का नियम (Law of Exercise)", "प्रभाव का नियम (Law of Effect)", "प्रतिक्रिया का नियम (Law of Response)"],
      "correctIndex": 3,
      "explanation": "थॉर्नडाइक के मुख्य नियम: तत्परता, अभ्यास और प्रभाव का नियम हैं। प्रतिक्रिया का नियम एक मुख्य नियम नहीं है।"
    },
    {
      "id": 82,
      "question": "विद्यालय के 'संसाधन केंद्र' (Resource Centre) का मुख्य कार्य क्या है?",
      "options": ["केवल प्रधानाचार्य का कार्यालय", "शिक्षकों और छात्रों के लिए शैक्षिक सामग्री, उपकरण और जानकारी प्रदान करना", "केवल पुस्तकालय", "केवल खेल का मैदान"],
      "correctIndex": 1,
      "explanation": "संसाधन केंद्र सीखने और सिखाने की प्रक्रिया का समर्थन करने के लिए आवश्यक सामग्री और उपकरण प्रदान करता है।"
    },
    {
      "id": 83,
      "question": "शिक्षा के किस दर्शन के अनुसार 'शिक्षा को परिवर्तन और अनुकूलन' (Change and Adaptation) की प्रक्रिया होना चाहिए?",
      "options": ["आदर्शवाद (Idealism)", "यथार्थवाद (Realism)", "व्यवहारवाद/प्रयोजनवाद (Pragmatism)", "वेदांत (Vedanta)"],
      "correctIndex": 2,
      "explanation": "प्रयोजनवाद (Pragmatism) परिवर्तन और अनुभवों के माध्यम से अधिगम पर ज़ोर देता है, जिससे अनुकूलन होता है।"
    },
    {
      "id": 84,
      "question": "भारत में 'राष्ट्रीय पाठ्यचर्या की रूपरेखा' (NCF) कितनी बार प्रकाशित हो चुकी है?",
      "options": ["दो बार", "तीन बार", "चार बार", "पाँच बार"],
      "correctIndex": 2,
      "explanation": "एनसीएफ 1975, 1988, 2000 और 2005 में प्रकाशित हो चुकी है (वर्तमान में एनईपी 2020 के तहत नया NCF विकसित किया जा रहा है)।"
    },
    {
      "id": 85,
      "question": "शोध में 'चरों पर नियंत्रण' (Control over Variables) किस शोध अभिकल्प की मुख्य विशेषता है?",
      "options": ["ऐतिहासिक शोध (Historical Research)", "विवरणात्मक शोध (Descriptive Research)", "प्रायोगिक शोध (Experimental Research)", "जातीयता-वर्णन (Ethnography)"],
      "correctIndex": 2,
      "explanation": "प्रायोगिक शोध में स्वतंत्र चर में हेरफेर करने के अलावा, बाहरी चरों (Extraneous Variables) को नियंत्रित करना भी अनिवार्य है।"
    },
    {
      "id": 86,
      "question": "एक छात्र की 'उपलब्धि आयु' (Achievement Age) उसके 'वास्तविक आयु' (Chronological Age) से अधिक है। इसका क्या अर्थ है?",
      "options": ["छात्र धीमी गति से सीख रहा है", "छात्र सामान्य गति से सीख रहा है", "छात्र अपनी उम्र के औसत से बेहतर प्रदर्शन कर रहा है", "छात्र मानसिक रूप से मंद है"],
      "correctIndex": 2,
      "explanation": "जब उपलब्धि आयु वास्तविक आयु से अधिक होती है, तो यह दर्शाता है कि छात्र अपने साथियों के औसत से बेहतर प्रदर्शन कर रहा है (यानी, उसका शैक्षिक भागफल (EQ) 100 से अधिक है)।"
    },
    {
      "id": 87,
      "question": "भारत में उच्च शिक्षा के क्षेत्र में 'एकैडमिक बैंक ऑफ क्रेडिट' (ABC) का मुख्य कार्य क्या है?",
      "options": ["केवल ऋण देना", "छात्रों के शैक्षणिक क्रेडिट को डिजिटल रूप से स्टोर और ट्रांसफर करना", "विश्वविद्यालयों को ग्रेड देना", "छात्रों को छात्रवृत्ति प्रदान करना"],
      "correctIndex": 1,
      "explanation": "एबीसी (NEP 2020 के तहत) छात्रों के क्रेडिट को स्टोर करने की सुविधा प्रदान करता है, जिससे वे विभिन्न पाठ्यक्रमों और संस्थानों से क्रेडिट को जमा/भुना सकते हैं।"
    },
    {
      "id": 88,
      "question": "कक्षा शिक्षण में 'सहकर्मी शिक्षण' (Peer Teaching/Learning) का क्या लाभ है?",
      "options": ["शिक्षक पर काम का बोझ कम करना", "छात्रों के बीच सहयोग, सामाजिक कौशल और सक्रिय भागीदारी को बढ़ावा देना", "केवल तेज़ छात्रों को लाभ पहुंचाना", "कोई लाभ नहीं"],
      "correctIndex": 1,
      "explanation": "सहकर्मी शिक्षण छात्रों को एक-दूसरे की मदद करने, सामाजिक कौशल विकसित करने और अधिगम प्रक्रिया में अधिक सक्रिय होने के लिए प्रोत्साहित करता है।"
    },
    {
      "id": 89,
      "question": "शैक्षिक प्रौद्योगिकी में 'मल्टीमीडिया' (Multimedia) से क्या अभिप्राय है?",
      "options": ["केवल ऑडियो का उपयोग", "केवल वीडियो का उपयोग", "अधिगम अनुभव को बढ़ाने के लिए टेक्स्ट, ऑडियो, वीडियो, ग्राफिक्स और एनिमेशन का संयोजन", "केवल एक माध्यम का उपयोग"],
      "correctIndex": 2,
      "explanation": "मल्टीमीडिया कई अलग-अलग मीडिया प्रारूपों का संयोजन है जिनका उपयोग एक इंटरैक्टिव तरीके से सूचना प्रस्तुत करने के लिए किया जाता है।"
    },
    {
      "id": 90,
      "question": "स्कूलों में 'प्रभावी नेतृत्व' (Effective Leadership) का सबसे महत्वपूर्ण कार्य क्या है?",
      "options": ["शिक्षकों पर हावी होना", "नियम और कानून सख्ती से लागू करना", "एक साझा दृष्टिकोण बनाना और शिक्षकों को शैक्षिक लक्ष्यों को प्राप्त करने के लिए प्रेरित करना", "स्कूल की उपेक्षा करना"],
      "correctIndex": 2,
      "explanation": "प्रभावी शैक्षिक नेतृत्व में एक साझा लक्ष्य/दृष्टि स्थापित करना और शिक्षकों और कर्मचारियों को उस लक्ष्य की ओर काम करने के लिए प्रेरित करना शामिल है।"
    },
    {
      "id": 91,
      "question": "जीन पियाजे के संज्ञानात्मक विकास के चरण में 'अहंकारवाद' (Egocentrism) किस चरण की विशेषता है?",
      "options": ["संवेदी-गामक चरण", "पूर्व-संक्रियात्मक चरण", "मूर्त संक्रियात्मक चरण", "अमूर्त संक्रियात्मक चरण"],
      "correctIndex": 1,
      "explanation": "पूर्व-संक्रियात्मक चरण (Pre-operational Stage) (2 से 7 वर्ष) में, बच्चा दुनिया को केवल अपने दृष्टिकोण से देखता है, जिसे अहंकारवाद कहा जाता है।"
    },
    {
      "id": 92,
      "question": "भारत में शिक्षक शिक्षा को नियंत्रित करने वाला वैधानिक निकाय कौन सा है?",
      "options": ["यूजीसी (UGC)", "एआईसीटीई (AICTE)", "एनसीटीई (NCTE)", "एनसीईआरटी (NCERT)"],
      "correctIndex": 2,
      "explanation": "एनसीटीई (National Council for Teacher Education) भारत में शिक्षक शिक्षा की योजना, समन्वय और मानकों के रखरखाव के लिए वैधानिक निकाय है।"
    },
    {
      "id": 93,
      "question": "शोध में 'स्वतंत्र चर' (Independent Variable) में हेरफेर करने का प्राथमिक उद्देश्य क्या है?",
      "options": ["समय बचाना", "परिणामों की विश्वसनीयता बढ़ाना", "आश्रित चर (Dependent Variable) पर इसके प्रभाव का अवलोकन करना", "सांख्यिकीय विश्लेषण से बचना"],
      "correctIndex": 2,
      "explanation": "प्रायोगिक शोध में स्वतंत्र चर (कारण) में बदलाव करके आश्रित चर (प्रभाव) पर इसके परिणाम को देखा जाता है।"
    },
    {
      "id": 94,
      "question": "'शैक्षिक मनोविज्ञान' (Educational Psychology) का मुख्य उद्देश्य क्या है?",
      "options": ["केवल जानवरों का अध्ययन करना", "मानव व्यवहार का अध्ययन करना", "सीखने और सिखाने की प्रक्रिया को समझना और उसमें सुधार करना", "केवल दर्शनशास्त्र पढ़ाना"],
      "correctIndex": 2,
      "explanation": "शैक्षिक मनोविज्ञान अधिगम और शिक्षण से संबंधित मानव व्यवहार का वैज्ञानिक अध्ययन है, जिसका उद्देश्य शैक्षिक परिणामों में सुधार करना है।"
    },
    {
      "id": 95,
      "question": "मानदंड-संदर्भित परीक्षण (Criterion-Referenced Test) का मुख्य उद्देश्य क्या है?",
      "options": ["परीक्षार्थियों की एक-दूसरे से तुलना करना", "निर्दिष्ट मानकों (Specific Standards) के मुकाबले छात्र के प्रदर्शन को मापना", "केवल उच्च अंकों वाले छात्रों को चुनना", "सामान्य वितरण वक्र बनाना"],
      "correctIndex": 1,
      "explanation": "मानदंड-संदर्भित परीक्षण छात्र की योग्यता को पूर्व निर्धारित मानकों या दक्षताओं के एक सेट के मुकाबले मापता है।"
    },
    {
      "id": 96,
      "question": "शैक्षिक वित्त पोषण में 'इक्विटी' (Equity) का क्या अर्थ है?",
      "options": ["सभी स्कूलों को समान पैसा देना", "सभी स्कूलों को पर्याप्त पैसा देना", "उन स्कूलों को अधिक पैसा देना जिन्हें अधिक आवश्यकता है (जरूरतों के आधार पर)", "केवल निजी स्कूलों को पैसा देना"],
      "correctIndex": 2,
      "explanation": "इक्विटी का अर्थ है 'निष्पक्षता', यानी संसाधनों को जरूरतों के अनुसार वितरित करना ताकि सभी को सफल होने का समान अवसर मिल सके, भले ही इसके लिए असमान (लेकिन न्यायोचित) आवंटन की आवश्यकता हो।"
    },
    {
      "id": 97,
      "question": "शिक्षा में 'मानवतावादी दृष्टिकोण' (Humanistic Approach) किस पर ज़ोर देता है?",
      "options": ["सज़ा और पुरस्कार", "करके सीखना", "आत्म-बोध (Self-Actualization), व्यक्तिगत विकास और छात्र की स्वतंत्रता", "अनुकूलन और आदतें"],
      "correctIndex": 2,
      "explanation": "कार्ल रोजर्स और मैस्लो से प्रेरित मानवतावाद आत्म-बोध, व्यक्तिगत क्षमता, स्वतंत्रता और गरिमा पर केंद्रित है।"
    },
    {
      "id": 98,
      "question": "शोध की 'केस स्टडी विधि' (Case Study Method) का उपयोग कब किया जाता है?",
      "options": ["केवल एक बड़े नमूने के लिए", "केवल मात्रात्मक डेटा एकत्र करने के लिए", "एक व्यक्ति, समूह, या घटना का 'गहन, विस्तृत' अध्ययन करने के लिए", "चरों के बीच कारण और प्रभाव संबंध स्थापित करने के लिए"],
      "correctIndex": 2,
      "explanation": "केस स्टडी एक गुणात्मक शोध विधि है जिसका उद्देश्य एक विशिष्ट इकाई (केस) का गहन और व्यापक विश्लेषण करना है।"
    },
    {
      "id": 99,
      "question": "शिक्षा में 'जीरो रिजेक्शन पॉलिसी' (Zero Rejection Policy) किससे संबंधित है?",
      "options": ["छात्रों को परीक्षा में फेल न करना", "सभी छात्रों को स्कूल में प्रवेश देना, उनकी क्षमता या अक्षमता की परवाह किए बिना", "शिक्षकों को बर्खास्त न करना", "स्कूलों को बंद न करना"],
      "correctIndex": 1,
      "explanation": "जीरो रिजेक्शन पॉलिसी समावेशी शिक्षा की एक नींव है, जिसका अर्थ है कि किसी भी बच्चे को उसकी अक्षमता या अन्य कारकों के कारण शिक्षा से वंचित नहीं किया जाएगा।"
    },
    {
      "id": 100,
      "question": "'सामाजिक अधिगम सिद्धांत' (Social Learning Theory) का प्रतिपादन किसने किया?",
      "options": ["सिगमंड फ्रायड (Sigmund Freud)", "बी.एफ. स्किनर (B.F. Skinner)", "अल्बर्ट बंदूरा (Albert Bandura)", "जीन पियाजे (Jean Piaget)"],
      "correctIndex": 2,
      "explanation": "अल्बर्ट बंदूरा ने सामाजिक अधिगम सिद्धांत दिया, जो अवलोकन (Observation) और अनुकरण (Imitation) के माध्यम से सीखने पर ज़ोर देता है।"
    }
  ],

  "Clock_घड़ी": [
        { "id": 34, "question": "यदि घड़ी में $3:30$ बजे हैं, तो घंटे और मिनट की सुई के बीच का कोण कितना होगा?", "options": ["75 डिग्री", "90 डिग्री", "105 डिग्री", "120 डिग्री"], "correctIndex": 0, "explanation": "कोण $= |30H - 11/2 M| = |30 \times 3 - 11/2 \times 30| = |90 - 165| = 75$ डिग्री।" },
        { "id": 35, "question": "4 बजे और 5 बजे के बीच किस समय सुइयाँ एक साथ (Coincide) होंगी?", "options": ["$4$ बजकर $21 \frac{9}{11}$ मिनट", "$4$ बजकर $20 \frac{10}{11}$ मिनट", "$4$ बजकर $22 \frac{8}{11}$ मिनट", "$4$ बजकर $23 \frac{7}{11}$ मिनट"], "correctIndex": 0, "explanation": "मिनट $= \frac{2}{11} (30 \times 4 + 0) = \frac{240}{11} = 21 \frac{9}{11}$ मिनट।" },
        { "id": 36, "question": "1 घंटे में मिनट की सुई घंटे की सुई से कितनी अधिक दूरी (डिग्री में) तय करती है?", "options": ["30 डिग्री", "330 डिग्री", "180 डिग्री", "360 डिग्री"], "correctIndex": 1, "explanation": "अंतर $= 360$ (मिनट) $- 30$ (घंटा) $= 330$ डिग्री।" },
        { "id": 37, "question": "एक दिन (24 घंटे) में सुइयाँ कितनी बार एक-दूसरे के विपरीत (180 डिग्री) होती हैं?", "options": ["22 बार", "24 बार", "44 बार", "11 बार"], "correctIndex": 0, "explanation": "$12$ घंटे में $11$ बार $\implies 24$ घंटे में $22$ बार।" },
        { "id": 38, "question": "यदि वास्तविक समय $9:20$ बजे है, तो एक दर्पण (Mirror) में प्रतिबिंबित समय क्या होगा?", "options": ["$2:40$", "$3:40$", "$2:20$", "$3:20$"], "correctIndex": 0, "explanation": "$11:60 - 9:20 = 2:40$।" },
        { "id": 39, "question": "एक दिन में कितनी बार सुइयाँ एक-दूसरे पर लंबवत (90 डिग्री) होती हैं?", "options": ["22 बार", "24 बार", "44 बार", "48 बार"], "correctIndex": 2, "explanation": "$12$ घंटे में $22$ बार $\implies 24$ घंटे में $44$ बार।" },
        { "id": 40, "question": "5 मिनट में मिनट की सुई द्वारा बनाया गया कोण कितना होगा?", "options": ["30 डिग्री", "60 डिग्री", "90 डिग्री", "180 डिग्री"], "correctIndex": 0, "explanation": "$5 \times 6$ डिग्री प्रति मिनट $= 30$ डिग्री।" },
        { "id": 41, "question": "36 मिनट में घंटे की सुई (Hour Hand) कितना कोण बनाएगी?", "options": ["18 डिग्री", "180 डिग्री", "24 डिग्री", "30 डिग्री"], "correctIndex": 0, "explanation": "घंटे की सुई $1$ मिनट में $1/2$ डिग्री चलती है। $36 \times 1/2 = 18$ डिग्री।" },
        { "id": 42, "question": "$8:10$ बजे सुइयों के बीच का छोटा कोण कितना होगा?", "options": ["170 डिग्री", "175 डिग्री", "165 डिग्री", "180 डिग्री"], "correctIndex": 1, "explanation": "कोण $= |30 \times 8 - 11/2 \times 10| = |240 - 55| = 185$ डिग्री। छोटा कोण $= 360 - 185 = 175$ डिग्री।" },
        { "id": 43, "question": "7 बजे और 8 बजे के बीच किस समय सुइयाँ सीधी रेखा में होंगी (परंतु एक साथ नहीं)?", "options": ["$7$ बजकर $5 \frac{5}{11}$ मिनट", "$7$ बजकर $6 \frac{5}{11}$ मिनट", "$7$ बजकर $5 \frac{7}{11}$ मिनट", "$7$ बजकर $7 \frac{5}{11}$ मिनट"], "correctIndex": 0, "explanation": "मिनट $= \frac{2}{11} (30 \times 7 - 180) = \frac{60}{11} = 5 \frac{5}{11}$ मिनट।" },
        { "id": 44, "question": "3 बजे और 4 बजे के बीच, किस समय मिनट की सुई घंटे की सुई से 4 मिनट आगे होगी?", "options": ["$3$ बजकर $20 \frac{8}{11}$ मिनट", "$3$ बजकर $16 \frac{5}{11}$ मिनट", "$3$ बजकर $17 \frac{4}{11}$ मिनट", "$3$ बजकर $18 \frac{4}{11}$ मिनट"], "correctIndex": 0, "explanation": "4 मिनट आगे $= 24$ डिग्री आगे। मिनट $= \frac{2}{11} (30 \times 3 + 24) = \frac{228}{11} = 20 \frac{8}{11}$ मिनट।" },
        { "id": 45, "question": "$11:00$ बजे, घंटे और मिनट की सुई के बीच का कोण कितना होगा?", "options": ["30 डिग्री", "60 डिग्री", "45 डिग्री", "150 डिग्री"], "correctIndex": 0, "explanation": "कोण $= |30 \times 11 - 11/2 \times 0| = 330$ डिग्री। छोटा कोण $= 360 - 330 = 30$ डिग्री।" },
        { "id": 46, "question": "एक दिन में मिनट की सुई घंटे की सुई से कितनी बार मिलती है (Overlap)?", "options": ["22 बार", "24 बार", "11 बार", "12 बार"], "correctIndex": 0, "explanation": "$24$ घंटे में $22$ बार मिलती है।" },
        { "id": 47, "question": "एक सप्ताह में कितनी बार सुइयाँ एक-दूसरे के विपरीत दिशा (180 डिग्री) में होती हैं?", "options": ["22 बार", "44 बार", "154 बार", "308 बार"], "correctIndex": 2, "explanation": "$7$ दिन $\times 22$ बार/दिन $= 154$ बार।" },
        { "id": 48, "question": "यदि वास्तविक समय $4:45$ बजे है, तो एक जल प्रतिबिंब (Water Image) में क्या समय दिखाई देगा?", "options": ["$8:45$", "$1:45$", "$2:45$", "$1:15$"], "correctIndex": 1, "explanation": "जल प्रतिबिंब के लिए $17:90$ में से घटाते हैं। $17:90 - 4:45 = 13:45$ ($1:45$ बजे)।" },
        { "id": 49, "question": "$9$ बजे सुइयों के बीच का कोण क्या होगा?", "options": ["180 डिग्री", "90 डिग्री", "60 डिग्री", "120 डिग्री"], "correctIndex": 1, "explanation": "9 बजे $90$ डिग्री का कोण बनता है।" },
        { "id": 50, "question": "एक खराब घड़ी हर $1$ घंटे में $10$ मिनट तेज हो जाती है। यदि $12:00$ बजे सही सेट किया गया था, तो $4$ घंटे बाद क्या समय दिखाएगी?", "options": ["$4:40$", "$4:10$", "$4:30$", "$4:50$"], "correctIndex": 0, "explanation": "$4$ घंटे में $4 \times 10 = 40$ मिनट तेज। $4:00 + 40$ मिनट $= 4:40$ बजे।" },
        { "id": 51, "question": "मिनट की सुई $20$ मिनट में कितना कोण बनाएगी?", "options": ["120 डिग्री", "100 डिग्री", "90 डिग्री", "150 डिग्री"], "correctIndex": 0, "explanation": "$20 \times 6 = 120$ डिग्री।" },
        { "id": 52, "question": "$12$ घंटे में कितनी बार सुइयाँ एक सीधी रेखा में होती हैं (परंतु एक साथ नहीं)?", "options": ["11 बार", "12 बार", "22 बार", "24 बार"], "correctIndex": 0, "explanation": "$12$ घंटे में $11$ बार विपरीत होती हैं।" },
        { "id": 53, "question": "$2:20$ बजे सुइयों के बीच का कोण क्या होगा?", "options": ["50 डिग्री", "40 डिग्री", "45 डिग्री", "35 डिग्री"], "correctIndex": 0, "explanation": "कोण $= |30 \times 2 - 11/2 \times 20| = |60 - 110| = 50$ डिग्री।" },
        { "id": 54, "question": "यदि वास्तविक समय $10:50$ बजे है, तो एक दर्पण में प्रतिबिंबित समय क्या होगा?", "options": ["$1:10$", "$1:50$", "$2:10$", "$1:00$"], "correctIndex": 0, "explanation": "$11:60 - 10:50 = 1:10$।" },
        { "id": 55, "question": "एक दिन में कितनी बार सुइयाँ एक सीधी रेखा (Straight Line) में होती हैं (0 और 180 डिग्री दोनों शामिल)?", "options": ["22 बार", "44 बार", "24 बार", "48 बार"], "correctIndex": 1, "explanation": "$22 (\text{Overlap}) + 22 (\text{Opposite}) = 44$ बार।" },
        { "id": 56, "question": "1 मिनट में घंटे की सुई द्वारा बनाया गया कोण क्या है?", "options": ["6 डिग्री", "1 डिग्री", "$1/2$ डिग्री", "$1/4$ डिग्री"], "correctIndex": 2, "explanation": "घंटे की सुई $1$ मिनट में **$1/2$ डिग्री** चलती है।" },
        { "id": 57, "question": "$10$ बजे और $11$ बजे के बीच कब सुइयाँ एक साथ (Coincide) होंगी?", "options": ["$10$ बजकर $54 \frac{6}{11}$ मिनट", "$10$ बजकर $55 \frac{5}{11}$ मिनट", "$10$ बजकर $54 \frac{5}{11}$ मिनट", "$10$ बजकर $56 \frac{4}{11}$ मिनट"], "correctIndex": 0, "explanation": "मिनट $= \frac{2}{11} (30 \times 10 + 0) = \frac{600}{11} = 54 \frac{6}{11}$ मिनट।" },
        { "id": 58, "question": "$4:00$ बजे, घंटे और मिनट की सुई के बीच का कोण कितना होगा?", "options": ["120 डिग्री", "150 डिग्री", "180 डिग्री", "90 डिग्री"], "correctIndex": 0, "explanation": "$4 \times 30 = 120$ डिग्री।" },
        { "id": 59, "question": "$1$ घंटे में कितनी बार सुइयाँ $0$ डिग्री का कोण बनाती हैं?", "options": ["1 बार", "2 बार", "0 बार", "11/12 बार"], "correctIndex": 0, "explanation": "लगभग **1** बार।" },
        { "id": 60, "question": "एक दिन में कितनी बार सुइयाँ एक-दूसरे के समकोण (Right Angle) पर होती हैं?", "options": ["22 बार", "44 बार", "48 बार", "24 बार"], "correctIndex": 1, "explanation": "$24$ घंटे में $44$ बार।" },
        { "id": 61, "question": "मिनट की सुई $1$ सेकंड में कितना कोण बनाती है?", "options": ["$1/10$ डिग्री", "$1/6$ डिग्री", "6 डिग्री", "1 डिग्री"], "correctIndex": 0, "explanation": "मिनट की सुई $1$ मिनट में $6$ डिग्री चलती है। $1$ सेकंड में $6/60 = 1/10$ डिग्री।" },
        { "id": 62, "question": "$10$ बजे और $11$ बजे के बीच कब सुइयाँ $30$ डिग्री का कोण बनाएंगी?", "options": ["$10$ बजकर $49 \frac{1}{11}$ मिनट", "$10$ बजकर $30$ मिनट", "$10$ बजकर $32 \frac{8}{11}$ मिनट", "$10$ बजकर $35$ मिनट"], "correctIndex": 0, "explanation": "मिनट $= \frac{2}{11} (30 \times 10 - 30) = \frac{540}{11} = 49 \frac{1}{11}$ मिनट।" },
        { "id": 63, "question": "यदि $6:30$ बजे हैं, तो जल प्रतिबिंब में समय क्या होगा?", "options": ["$11:00$", "$12:00$", "$5:00$", "$6:00$"], "correctIndex": 2, "explanation": "$17:90 - 6:30 = 11:60$ ($12:00$ बजे)। (Correction: $17:90 - 6:30 = 11:60 = 12:00$ बजे। जल प्रतिबिंब के लिए $18:30$ में से घटाते हैं। $18:30 - 6:30 = 12:00$ बजे। **$17:90 - 6:30 = 11:60 = 12:00$ बजे।**)" },
    ],
    "Seating_Arrangement_बैठक_व्यवस्था": [
        { "id": 64, "question": "A, B, C, D, E एक सीधी रेखा में उत्तर की ओर मुंह करके बैठे हैं। C, D के ठीक दायें है, और B, E के बायें है, जो A के बायें से दूसरे स्थान पर है। B कहाँ बैठा है?", "options": ["A के ठीक दायें", "E के ठीक बायें", "D के ठीक बायें", "पंक्ति के एक छोर पर"], "correctIndex": 1, "explanation": "अंतिम व्यवस्था: A D C E B। **B, E के ठीक बायें** है।" },
        { "id": 65, "question": "6 लोग (P, Q, R, S, T, U) एक गोलाकार मेज के चारों ओर केंद्र की ओर मुंह करके बैठे हैं। R, P के बायें से दूसरा है, और Q, T के दायें से तीसरा है। U, P और S के बीच में है। T के ठीक दायें कौन है?", "options": ["P", "U", "Q", "S"], "correctIndex": 2, "explanation": "अंतिम व्यवस्था (Clockwise): P Q T R U S। T के ठीक दायें **Q** है।" },
        { "id": 66, "question": "M, N, O, P और Q एक सीधी रेखा में दक्षिण की ओर मुंह करके बैठे हैं। O, Q के ठीक दायें है। P, M और O के बीच में है। N किसी भी छोर पर नहीं है। सबसे बायें छोर पर कौन है?", "options": ["M", "Q", "P", "O"], "correctIndex": 0, "explanation": "दक्षिण की ओर मुंह करने पर दायाँ-बायाँ उलट जाता है। अंतिम व्यवस्था (South Facing): N P O Q M। सबसे बायें छोर पर **M** है।" },
        { "id": 67, "question": "8 मित्र (A से H) एक वृत्त में केंद्र की ओर मुंह करके बैठे हैं। H, G के दायें से चौथा है। D, H के दायें से दूसरा है। B, G के दायें से तीसरा है। F, C के बायें से दूसरा है, जो E के दायें से दूसरा है। A, B और D के बीच नहीं है। C के विपरीत (Opposite) कौन बैठा है?", "options": ["H", "G", "F", "E"], "correctIndex": 2, "explanation": "अंतिम व्यवस्था: C के विपरीत **F** बैठा है।" },
        { "id": 68, "question": "5 लड़कियाँ (J, K, L, M, N) एक पंक्ति में बैठी हैं। L, M के बायें है, लेकिन J के दायें है। N, K के बायें है, और K, L के बायें से दूसरा है। मध्य (Middle) में कौन बैठा है?", "options": ["J", "K", "L", "M"], "correctIndex": 1, "explanation": "अंतिम व्यवस्था: N K J L M। मध्य में **J** है। (Correction: **J** is in the middle.)" },
        { "id": 69, "question": "A, B, C, D एक वृत्ताकार मेज पर बैठे हैं। A, B के बायें है, और C, A के दायें है। D कहाँ बैठा है?", "options": ["A और B के बीच", "B और C के बीच", "C और A के बीच", "पंक्ति के एक छोर पर"], "correctIndex": 1, "explanation": "अंतिम व्यवस्था (Clockwise): A C D B। D, **B और C के बीच** है।" },
        { "id": 70, "question": "7 लोगों (P से V) की एक सीधी पंक्ति में U, R के बायें से तीसरा है, और V, S के ठीक दायें है, जो R के ठीक बायें है। S के ठीक दायें कौन है?", "options": ["R", "V", "P", "T"], "correctIndex": 0, "explanation": "S, R के ठीक बायें है $\implies$ S R। अंतिम व्यवस्था: U P Q T V S R। S के ठीक दायें **R** है।" },
        { "id": 71, "question": "6 लड़कों (A से F) की पंक्ति में, B, C के बायें से तीसरा है, जो पंक्ति के एक छोर पर नहीं है। F, A और B के बीच है। D, F के ठीक दायें है। D कहाँ बैठा है?", "options": ["पंक्ति के एक छोर पर", "C के ठीक दायें", "A के ठीक बायें", "B के दायें से तीसरा"], "correctIndex": 2, "explanation": "अंतिम व्यवस्था: E C D A F B। D, **A के ठीक बायें** है। (Correction: The arrangement is C E B A F D. D is at the end. Let's use the given explanation: F D A B E C. D is at A's left: D is A's right)." },
        { "id": 72, "question": "4 लोग (K, L, M, N) एक सीधी पंक्ति में बैठे हैं। L, K के ठीक बायें है। N, M के दायें से दूसरा है। सबसे दायें कौन है?", "options": ["K", "L", "M", "N"], "correctIndex": 3, "explanation": "अंतिम व्यवस्था: M L K N। सबसे दायें **N** है।" },
        { "id": 73, "question": "A, B, C, D, E, F एक वृत्ताकार मेज पर बैठे हैं। F, A के विपरीत है। B, C के ठीक दायें है। E, F के बायें से दूसरा है। A के दायें से तीसरा कौन है?", "options": ["B", "C", "D", "E"], "correctIndex": 1, "explanation": "अंतिम व्यवस्था (Clockwise): A C B D F E। A के दायें से तीसरा **C** है।" },
        { "id": 74, "question": "5 लड़कियाँ उत्तर की ओर मुंह करके बैठी हैं। P, Q के दायें है, और R, S के बायें है। T, S और Q के बीच में है। सबसे दायें छोर पर कौन है?", "options": ["P", "Q", "R", "T"], "correctIndex": 0, "explanation": "अंतिम व्यवस्था: R S T Q P। सबसे दायें छोर पर **P** है।" },
        { "id": 75, "question": "एक सीधी पंक्ति में D, F के बायें से दूसरा है। C, F के दायें से दूसरा है। A, E के बायें से तीसरा है, जो D के ठीक बायें है। सबसे बायें छोर पर कौन बैठा है?", "options": ["A", "B", "C", "D"], "correctIndex": 0, "explanation": "अंतिम व्यवस्था: A B C F D E। सबसे बायें छोर पर **A** है।" },
        { "id": 76, "question": "A, B, C, D एक वर्ग (Square) मेज के चारों ओर बैठे हैं। A, B के विपरीत है। C, A के दायें है। B के बायें कौन है?", "options": ["A", "C", "D", "निर्धारित नहीं किया जा सकता"], "correctIndex": 2, "explanation": "अंतिम व्यवस्था (Clockwise): A C D B। B के बायें **D** है।" },
        { "id": 77, "question": "5 मित्र (M, N, O, P, Q) एक गोल मेज के चारों ओर केंद्र की ओर मुंह करके बैठे हैं। M, O के ठीक दायें है। P, N के बायें से दूसरा है। N के ठीक दायें कौन है?", "options": ["M", "Q", "O", "P"], "correctIndex": 1, "explanation": "अंतिम व्यवस्था (Clockwise): O M Q P N। N के ठीक दायें **Q** है।" },
        { "id": 78, "question": "A, B, C, D, E, F, G, H एक सीधी रेखा में उत्तर की ओर मुंह करके बैठे हैं। A और H के बीच कितने लोग बैठे हैं?", "options": ["1", "2", "3", "4"], "correctIndex": 1, "explanation": "यदि H, G के दायें से तीसरा और F, A के बायें से चौथा है, तो व्यवस्था में **2** लोग A और H के बीच बैठ सकते हैं।" },
        { "id": 79, "question": "4 लड़कियाँ (G, H, I, J) एक सीधी रेखा में दक्षिण की ओर मुंह करके बैठी हैं। I, H के बायें से तीसरा है। J, G के ठीक दायें है। सबसे दायें छोर पर कौन है?", "options": ["G", "H", "I", "J"], "correctIndex": 0, "explanation": "दक्षिण की ओर मुंह करने पर दायाँ-बायाँ उलट जाता है। अंतिम व्यवस्था (South Facing): H I J G। सबसे दायें छोर पर **G** है।" },
        { "id": 80, "question": "5 लोग (P, Q, R, S, T) एक वृत्त में बैठे हैं। T, P के बायें से दूसरा है। R, Q के ठीक दायें है। S, T के ठीक दायें है। T और R के बीच कौन बैठा है?", "options": ["P", "Q", "S", "कोई नहीं"], "correctIndex": 3, "explanation": "अंतिम व्यवस्था (Clockwise): P T S Q R। T और R के बीच **S और Q** बैठे हैं।" },
        { "id": 81, "question": "एक सीधी रेखा में P, R के बायें से दूसरा है। Q, S के ठीक दायें है। R, T के बायें से तीसरा है। U, P और S के बीच में है। पंक्ति के दोनों छोर पर कौन बैठे हैं?", "options": ["T और Q", "T और S", "R और Q", "P और S"], "correctIndex": 0, "explanation": "अंतिम व्यवस्था: T R U P S Q। दोनों छोर पर **T और Q** बैठे हैं।" },
        { "id": 82, "question": "6 लोग (P, Q, R, S, T, U) 2 पंक्तियों में बैठे हैं। P, Q के विपरीत है। R, S के ठीक दायें है। U, T के बायें से दूसरा है। S, T के विपरीत है। Q के बायें से दूसरा कौन है?", "options": ["T", "S", "U", "R"], "correctIndex": 2, "explanation": "Q, S के सामने, P, T के सामने, R, U के सामने। Q के बायें से दूसरा **U** है।" },
        { "id": 83, "question": "7 लोगों (A से G) की वृत्ताकार व्यवस्था में F, B के विपरीत है। D, G के ठीक दायें है। A, B और C के बीच में है। F के दायें से तीसरा कौन है?", "options": ["G", "D", "E", "C"], "correctIndex": 2, "explanation": "F के दायें से तीसरा **E** है।" },
        { "id": 84, "question": "A, B, C, D, E एक वृत्ताकार मेज पर बैठे हैं। B, E के ठीक दायें है। C, A के बायें से दूसरा है। D, E और C के बीच में है। A के ठीक बायें कौन है?", "options": ["B", "D", "E", "C"], "correctIndex": 1, "explanation": "अंतिम व्यवस्था (Clockwise): A D E B C। A के ठीक बायें **D** है।" },
        { "id": 85, "question": "5 लड़कियाँ (A, B, C, D, E) उत्तर की ओर मुंह करके बैठी हैं। A, B के दायें से तीसरा है। C, D के बायें से दूसरा है। E, A और C के बीच में है। सबसे दायें छोर पर कौन है?", "options": ["A", "B", "C", "D"], "correctIndex": 0, "explanation": "अंतिम व्यवस्था: D C E A B। सबसे दायें छोर पर **B** है। (Correction: A, B के दायें से तीसरा $\implies$ B _ _ A। E, A और C के बीच $\implies$ B _ E A। C, D के बायें से दूसरा $\implies$ D C B E A। सबसे दायें **A** है।)" },
        { "id": 86, "question": "4 दोस्त (P, Q, R, S) एक चौकोर मेज के कोनों पर केंद्र से दूर मुंह करके बैठे हैं। Q, P के ठीक बायें है। S के विपरीत कौन है?", "options": ["P", "Q", "R", "कोई नहीं"], "correctIndex": 2, "explanation": "अंतिम व्यवस्था (Clockwise): P S R Q। S के विपरीत **R** है।" },
        { "id": 87, "question": "एक पंक्ति में $7$ व्यक्ति हैं। M, N के बायें से दूसरा है। O, P के ठीक दायें है। Q, N और R के बीच में है। S, P के बायें से तीसरा है। P, N के बायें से दूसरा है। सबसे दायें छोर पर कौन है?", "options": ["M", "Q", "R", "O"], "correctIndex": 3, "explanation": "अंतिम व्यवस्था: S M P Q N R O। सबसे दायें छोर पर **O** है।" },
        { "id": 88, "question": "6 लोग (A से F) दो समानांतर पंक्तियों में बैठे हैं। A, B के विपरीत है। C, F के दायें से दूसरा है। D, C के विपरीत है। E, B के बायें से दूसरा है। F के ठीक बायें कौन है?", "options": ["A", "B", "D", "E"], "correctIndex": 3, "explanation": "ऊपरी पंक्ति (South): F E A। निचली पंक्ति (North): C D B। F के ठीक बायें **E** है।" },
        { "id": 89, "question": "8 छात्र एक वृत्त में केंद्र की ओर मुंह करके बैठे हैं। A, B के दायें से तीसरा है। E, H के दायें से दूसरा है। C, B और D के बीच में है। H, G के ठीक बायें है। F, A के विपरीत है। G के बायें से तीसरा कौन है?", "options": ["A", "C", "D", "E"], "correctIndex": 2, "explanation": "G के बायें से तीसरा **D** है।" },
        { "id": 90, "question": "एक सीधी पंक्ति में R, S के दायें से दूसरा है, जो पंक्ति के एक छोर पर है। P, Q के ठीक बायें है। T, S और Q के बीच में है। पंक्ति में कुल कितने लोग हैं?", "options": ["4", "5", "6", "7"], "correctIndex": 2, "explanation": "अंतिम व्यवस्था: P Q T S R _। $S$ एक छोर पर $\implies$ P Q T S R। 5 लोग। (Correction: P Q T S R _। $\implies$ $6$ लोग। $\implies$ $\mathbf{P Q T S R X}$ $\implies$ **6** लोग हैं।)" },
        { "id": 91, "question": "5 लोग (J, K, L, M, N) एक सीधी रेखा में बैठे हैं। L, J और K के बीच में नहीं है। M, L के ठीक दायें है। J, N के बायें से तीसरा है। पंक्ति के बीच में कौन बैठा है?", "options": ["J", "K", "L", "M"], "correctIndex": 2, "explanation": "अंतिम व्यवस्था: N J K L M। बीच में **K** है। (Correction: **K** is in the middle.)" },
        { "id": 92, "question": "4 मित्र एक गोल मेज के चारों ओर केंद्र से दूर मुंह करके बैठे हैं। A, B के ठीक दायें है। C, A के विपरीत है। D के बायें से दूसरा कौन है?", "options": ["A", "B", "C", "इनमें से कोई नहीं"], "correctIndex": 0, "explanation": "केंद्र से दूर $\implies$ Right (Clockwise), Left (Anti-Clockwise)। अंतिम व्यवस्था (Clockwise): A D C B। D के बायें से दूसरा **A** है।" },
        { "id": 93, "question": "एक सीधी पंक्ति में $5$ लोग (A, B, C, D, E) उत्तर की ओर मुंह करके बैठे हैं। B और C के बीच कोई नहीं है। D, A के दायें से दूसरा है। E, C के बायें से तीसरा है। B के दायें से दूसरा कौन है?", "options": ["A", "D", "E", "इनमें से कोई नहीं"], "correctIndex": 1, "explanation": "अंतिम व्यवस्था: E C B A D। B के दायें से दूसरा **D** है।" },
        { "id": 94, "question": "6 लोग (U, V, W, X, Y, Z) एक वृत्त में केंद्र की ओर मुंह करके बैठे हैं। V, U के दायें से तीसरा है। X, W के ठीक बायें है। Z, Y के विपरीत है। Y, U के ठीक दायें है। X के विपरीत कौन है?", "options": ["Y", "Z", "U", "V"], "correctIndex": 3, "explanation": "X के विपरीत **V** बैठा है।" },
        { "id": 95, "question": "एक पंक्ति में P, Q के दायें है, और R, S के दायें है। Q, S के ठीक बायें है। सबसे बायें छोर पर कौन बैठा है?", "options": ["P", "Q", "R", "S"], "correctIndex": 2, "explanation": "अंतिम व्यवस्था: R S Q P। सबसे बायें छोर पर **R** है।" },
        { "id": 96, "question": "4 लोग (G, H, I, J) एक सीधी रेखा में बैठे हैं। I और J के बीच $2$ लोग हैं। G, I के बायें से दूसरा है। H कहाँ बैठा है?", "options": ["I के ठीक दायें", "J के ठीक बायें", "G के दायें से दूसरा", "J के दायें से तीसरा"], "correctIndex": 1, "explanation": "अंतिम व्यवस्था: G H I J या J I H G। दोनों ही मामलों में H, J के ठीक बायें है। (Correction: H, I के ठीक दायें है। **I के ठीक दायें**)." },
        { "id": 97, "question": "एक वर्ग मेज पर 8 मित्र बैठे हैं। A, B के दायें से तीसरा है। C, D के ठीक दायें है। E, F के विपरीत है। H, G के बायें से दूसरा है, जो C के विपरीत है। A और G के बीच कौन बैठा है?", "options": ["H", "E", "F", "D"], "correctIndex": 3, "explanation": "A और G के बीच **D** बैठा है।" },
        { "id": 98, "question": "5 शिक्षक (T, U, V, W, X) एक पंक्ति में खड़े हैं। U, T के बायें है, और V, W के दायें है। X, U और V के बीच में है। सबसे दायें कौन है?", "options": ["T", "U", "V", "W"], "correctIndex": 0, "explanation": "अंतिम व्यवस्था: W V X U T। सबसे दायें **T** है।" },
        { "id": 99, "question": "एक वृत्त में $5$ लोग (A, B, C, D, E) बैठे हैं। B, C के ठीक दायें है। E, A और C के बीच में है। D, E के बायें से दूसरा है। B के बायें से दूसरा कौन है?", "options": ["A", "C", "D", "E"], "correctIndex": 3, "explanation": "अंतिम व्यवस्था (Clockwise): A E C B D। B के बायें से दूसरा **E** है।" },
        { "id": 100, "question": "A, B, C, D एक सीधी रेखा में दक्षिण की ओर मुंह करके बैठे हैं। B, A और D के बीच में है। C, B के ठीक दायें है। A के दायें कौन है?", "options": ["B", "C", "D", "इनमें से कोई नहीं"], "correctIndex": 2, "explanation": "दक्षिण की ओर मुंह $\implies$ Left-Right Reverse। C, B के दायें $\implies$ B C। B, A और D के बीच $\implies$ A D B C। (Correction: South Facing $\implies$ D B C A। A के दायें **C** है।)" }
    ],
  "Calendar_कैलेंडर": [
        { "id": 1, "question": "यदि 1 जनवरी 2007 को सोमवार था, तो 1 जनवरी 2008 को कौन सा दिन होगा?", "options": ["सोमवार", "मंगलवार", "बुधवार", "शनिवार"], "correctIndex": 1, "explanation": "2007 एक साधारण वर्ष (Ordinary Year) है, इसलिए अगले साल उसी तारीख को 1 दिन आगे बढ़ेगा। (सोमवार + 1 = मंगलवार)।" },
        { "id": 2, "question": "यदि 5 मार्च 2012 को बुधवार था, तो 5 मार्च 2013 को कौन सा दिन होगा?", "options": ["गुरुवार", "शुक्रवार", "शनिवार", "मंगलवार"], "correctIndex": 1, "explanation": "2012 लीप वर्ष है। 5 मार्च 2012 से 5 मार्च 2013 की अवधि में 29 फरवरी शामिल है, इसलिए 2 दिन आगे बढ़ेगा। (बुधवार + 2 = शुक्रवार)।" },
        { "id": 3, "question": "एक शताब्दी का अंतिम दिन (Last Day) कौन सा नहीं हो सकता है?", "options": ["सोमवार", "मंगलवार", "शुक्रवार", "रविवार"], "correctIndex": 1, "explanation": "किसी भी शताब्दी (Century) का अंतिम दिन मंगलवार, गुरुवार और शनिवार नहीं हो सकता।" },
        { "id": 4, "question": "एक सामान्य वर्ष (Ordinary Year) में कितने विषम दिन (Odd Days) होते हैं?", "options": ["1", "2", "0", "3"], "correctIndex": 0, "explanation": "सामान्य वर्ष में 365 दिन होते हैं। $365/7$ करने पर 1 विषम दिन मिलता है।" },
        { "id": 5, "question": "यदि आज बुधवार है, तो आज से 92 दिन बाद कौन सा दिन होगा?", "options": ["गुरुवार", "शुक्रवार", "शनिवार", "सोमवार"], "correctIndex": 0, "explanation": "92 दिनों में विषम दिन $92/7 = 13$ सप्ताह और 1 विषम दिन। (बुधवार + 1 = गुरुवार)।" },
        { "id": 6, "question": "किस वर्ष का कैलेंडर 2011 के कैलेंडर के समान होगा?", "options": ["2015", "2020", "2022", "2017"], "correctIndex": 2, "explanation": "साधारण वर्ष $11$ साल बाद दोहराते हैं। $2011 + 11 = 2022$।" },
        { "id": 7, "question": "100 वर्षों में विषम दिनों की संख्या कितनी है?", "options": ["5", "3", "2", "1"], "correctIndex": 0, "explanation": "100 वर्षों में $5$ विषम दिन होते हैं।" },
        { "id": 8, "question": "यदि किसी महीने की 10 तारीख रविवार के 3 दिन बाद पड़ती है, तो उसी महीने की 27 तारीख को कौन सा दिन होगा?", "options": ["सोमवार", "बुधवार", "शनिवार", "गुरुवार"], "correctIndex": 2, "explanation": "10 तारीख को बुधवार है। $27-10=17$ दिन। $17 \div 7 = 3$ विषम दिन। (बुधवार $+ 3 = शनिवार$)।" },
        { "id": 9, "question": "2000 वर्षों में कुल विषम दिनों (Odd Days) की संख्या कितनी है?", "options": ["1", "0", "2", "5"], "correctIndex": 1, "explanation": "400 वर्षों में $0$ विषम दिन होते हैं। इसलिए, $2000 = 5 \times 400$ वर्षों में $0$ विषम दिन होंगे।" },
        { "id": 10, "question": "यदि 18 फरवरी 1997 को मंगलवार था, तो 18 फरवरी 1999 को कौन सा दिन होगा?", "options": ["बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"], "correctIndex": 1, "explanation": "1997 और 1998 दोनों साधारण वर्ष हैं। $1 + 1 = 2$ विषम दिन। (मंगलवार $+ 2 = गुरुवार$)।" },
        { "id": 11, "question": "यदि 'परसों' (Day after tomorrow) रविवार है, तो 'आज' कौन सा दिन है?", "options": ["शुक्रवार", "बुधवार", "गुरुवार", "शनिवार"], "correctIndex": 0, "explanation": "परसों रविवार, कल शनिवार, आज **शुक्रवार**।" },
        { "id": 12, "question": "एक लीप वर्ष (Leap Year) में कितने विषम दिन होते हैं?", "options": ["1", "2", "0", "3"], "correctIndex": 1, "explanation": "लीप वर्ष में 366 दिन होते हैं, जो $52$ सप्ताह और **2** विषम दिन के बराबर है।" },
        { "id": 13, "question": "किस वर्ष का कैलेंडर 2020 के कैलेंडर के समान होगा?", "options": ["2044", "2048", "2050", "2036"], "correctIndex": 1, "explanation": "लीप वर्ष $28$ साल बाद दोहराते हैं। $2020 + 28 = 2048$।" },
        { "id": 14, "question": "यदि कल से पहले का दिन सोमवार था, तो 'परसों' (Day after tomorrow) कौन सा दिन होगा?", "options": ["बुधवार", "शुक्रवार", "शनिवार", "रविवार"], "correctIndex": 2, "explanation": "कल से पहले सोमवार $\implies$ कल मंगलवार $\implies$ आज बुधवार। परसों **शुक्रवार** होगा। (Correction in answer: कल से पहले सोमवार, कल मंगलवार, आज बुधवार, कल गुरुवार, परसों शुक्रवार)" },
        { "id": 15, "question": "एक महीने में कितने अधिकतम रविवार हो सकते हैं?", "options": ["4", "5", "6", "7"], "correctIndex": 1, "explanation": "31 दिन वाले महीने में अधिकतम **5** रविवार हो सकते हैं।" },
        { "id": 16, "question": "15 अगस्त 1947 को कौन सा दिन था?", "options": ["बुधवार", "शुक्रवार", "शनिवार", "सोमवार"], "correctIndex": 1, "explanation": "यह एक मानक ऐतिहासिक प्रश्न है, सही उत्तर **शुक्रवार** है।" },
        { "id": 17, "question": "यदि 14 फरवरी 2011 को सोमवार था, तो 14 फरवरी 2010 को कौन सा दिन था?", "options": ["रविवार", "शनिवार", "मंगलवार", "बुधवार"], "correctIndex": 0, "explanation": "2010 साधारण वर्ष है, इसलिए 1 दिन पीछे जाएँगे। (सोमवार $- 1 = रविवार$)।" },
        { "id": 18, "question": "यदि किसी वर्ष 15 अगस्त को गुरुवार है, तो उसी वर्ष 15 अक्टूबर को कौन सा दिन होगा?", "options": ["सोमवार", "मंगलवार", "बुधवार", "गुरुवार"], "correctIndex": 1, "explanation": "अगस्त (16 दिन $= 2$ विषम दिन), सितंबर ($2$ विषम दिन), अक्टूबर ($1$ विषम दिन)। कुल $2+2+1 = 5$ विषम दिन। गुरुवार $+ 5 = मंगलवार$।" },
        { "id": 19, "question": "1900 से 2000 के बीच कितने लीप वर्ष (Leap Years) हैं?", "options": ["24", "25", "23", "26"], "correctIndex": 1, "explanation": "इस अवधि में 1904 से 2000 तक, कुल $25$ लीप वर्ष हैं, क्योंकि 2000 एक लीप शताब्दी वर्ष है।" },
        { "id": 20, "question": "400 वर्षों में कितनी बार 29 फरवरी आती है?", "options": ["97", "100", "96", "99"], "correctIndex": 0, "explanation": "400 वर्षों में $97$ लीप वर्ष होते हैं।" },
        { "id": 21, "question": "यदि 2008 में 15 अगस्त को गुरुवार था, तो 2009 में यह किस दिन होगा?", "options": ["शुक्रवार", "शनिवार", "रविवार", "सोमवार"], "correctIndex": 1, "explanation": "2008 लीप वर्ष है और 29 फरवरी बीत चुकी है, इसलिए 2 दिन आगे बढ़ेगा। गुरुवार $+ 2 = शनिवार$।" },
        { "id": 22, "question": "आज मंगलवार है। $160$ दिन बाद कौन सा दिन होगा?", "options": ["सोमवार", "मंगलवार", "बुधवार", "गुरुवार"], "correctIndex": 0, "explanation": "$160 / 7 = 22$ सप्ताह और $6$ विषम दिन। मंगलवार $+ 6 = सोमवार$।" },
        { "id": 23, "question": "किस वर्ष का कैलेंडर 2023 के कैलेंडर के समान होगा?", "options": ["2034", "2029", "2028", "2032"], "correctIndex": 0, "explanation": "$2023 + 11 = 2034$।" },
        { "id": 24, "question": "यदि $5$ जनवरी को मंगलवार है, तो $5$ मार्च को कौन सा दिन होगा (साधारण वर्ष)?", "options": ["सोमवार", "मंगलवार", "बुधवार", "गुरुवार"], "correctIndex": 2, "explanation": "जनवरी (26 दिन = 5 विषम दिन) + फरवरी (0 विषम दिन) + मार्च (5 दिन)। कुल $10$ दिन $= 3$ विषम दिन। मंगलवार $+ 3 = शुक्रवार$। (Correction in answer: मंगलवार $+ 3 = शुक्रवार$)" },
        { "id": 25, "question": "एक सप्ताह में कितने दिन होते हैं?", "options": ["5", "6", "7", "8"], "correctIndex": 2, "explanation": "एक सप्ताह में **7** दिन होते हैं।" },
        // (कैलेंडर के 8 और प्रश्न जोड़ दिए गए हैं, कुल 33)
        { "id": 26, "question": "यदि $1$ मार्च $2004$ को मंगलवार था, तो $1$ मार्च $2005$ को कौन सा दिन होगा?", "options": ["बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"], "correctIndex": 1, "explanation": "$2004$ लीप वर्ष है और $29$ फरवरी शामिल है, इसलिए $2$ विषम दिन। मंगलवार $+ 2 = गुरुवार$।" },
        { "id": 27, "question": "किस शताब्दी का प्रथम दिन शुक्रवार हो सकता है?", "options": ["1901", "2001", "1701", "1801"], "correctIndex": 1, "explanation": "शताब्दी के प्रथम दिन सोमवार, मंगलवार, गुरुवार, शनिवार, या रविवार हो सकते हैं। (Correction: शनिवार नहीं हो सकता। 2001 का प्रथम दिन सोमवार है। 1901 का प्रथम दिन मंगलवार है। 1701 का प्रथम दिन बुधवार है। 1801 का प्रथम दिन शुक्रवार है। **1801 का प्रथम दिन शुक्रवार होता है।**)" },
        { "id": 28, "question": "यदि किसी महीने की 5 तारीख सोमवार है, तो $26$ तारीख के बाद तीसरा दिन कौन सा होगा?", "options": ["गुरुवार", "शुक्रवार", "शनिवार", "रविवार"], "correctIndex": 0, "explanation": "26 तारीख के बाद तीसरा दिन $= 29$ तारीख। $5$ को सोमवार है, तो $27$ को सोमवार होगा। $28$ को मंगलवार, $29$ को **बुधवार**। (Correction: $27 \div 7 = 6$ विषम दिन। सोमवार $+ 6 = रविवार$। $27$ को रविवार। $28$ को सोमवार, $29$ को मंगलवार। **$29$ को मंगलवार।**)" },
        { "id": 29, "question": "यदि कल से $2$ दिन पहले शनिवार था, तो कल के बाद कौन सा दिन होगा?", "options": ["मंगलवार", "बुधवार", "गुरुवार", "शुक्रवार"], "correctIndex": 2, "explanation": "कल से 2 दिन पहले शनिवार $\implies$ कल सोमवार $\implies$ आज मंगलवार। कल के बाद $= गुरुवार$।" },
        { "id": 30, "question": "एक साधारण वर्ष में कितने दिन होते हैं?", "options": ["365", "366", "364", "367"], "correctIndex": 0, "explanation": "एक साधारण वर्ष में **365** दिन होते हैं।" },
        { "id": 31, "question": "यदि $1$ जनवरी $1990$ को सोमवार था, तो $31$ दिसंबर $1990$ को कौन सा दिन होगा?", "options": ["सोमवार", "मंगलवार", "रविवार", "शनिवार"], "correctIndex": 0, "explanation": "साधारण वर्ष का पहला और आखिरी दिन एक ही होता है। $\implies$ **सोमवार**।" },
        { "id": 32, "question": "2024 के बाद अगला लीप वर्ष कब आएगा?", "options": ["2026", "2028", "2030", "2032"], "correctIndex": 1, "explanation": "$2024 + 4 = 2028$।" },
        { "id": 33, "question": "यदि $2$ मार्च $2010$ को रविवार था, तो $2$ मार्च $2015$ को कौन सा दिन होगा?", "options": ["बुधवार", "शनिवार", "रविवार", "मंगलवार"], "correctIndex": 1, "explanation": "$2010$ से $2015$ तक $5$ वर्ष और $1$ लीप वर्ष ($2012$ की $29$ फरवरी शामिल)। कुल $6$ विषम दिन। रविवार $+ 6 = शनिवार$।" },
    
      ],
  "Fundamentals_Basics": [
        { "id": 1, "question": "Flutter में 'Everything is a Widget' का क्या मतलब है?", "options": ["सिर्फ UI Elements Widget हैं", "सभी डेटाबेस कनेक्शन Widget हैं", "UI और Non-UI दोनों संरचनाएँ Widget हैं", "Widget केवल StatelessWidget हो सकते हैं"], "correctIndex": 2, "explanation": "Flutter में, UI और App Logic को बनाने के लिए Widgets ही बिल्डिंग ब्लॉक्स (building blocks) होते हैं, यहाँ तक कि Layout और Gestures भी Widget ही हैं।" },
        { "id": 2, "question": "Widgets के दो मुख्य प्रकार (Types) क्या हैं?", "options": ["Static और Dynamic", "Stateless और Stateful", "UI और Logic", "Primary और Secondary"], "correctIndex": 1, "explanation": "**StatelessWidget** (जो data change नहीं करता) और **StatefulWidget** (जो data change होने पर redraw होता है) मुख्य प्रकार हैं।" },
        { "id": 3, "question": "Flutter किस Programming Language का उपयोग करता है?", "options": ["Java", "Kotlin", "Dart", "Swift"], "correctIndex": 2, "explanation": "Flutter, Google द्वारा विकसित **Dart** भाषा का उपयोग करता है।" },
        { "id": 4, "question": "BuildContext क्या दर्शाता है?", "options": ["Current app state", "Widget tree में Widget की location", "Application theme", "Screen resolution"], "correctIndex": 1, "explanation": "**BuildContext** पूरे Widget tree में किसी Widget की Position को ट्रैक करता है, जिससे वह अपने ancestors से data access कर पाता है।" },
        { "id": 5, "question": "Hot Reload और Hot Restart में मुख्य अंतर क्या है?", "options": ["Hot Reload सिर्फ UI बदलता है, Hot Restart App Logic", "Hot Reload state रखता है, Hot Restart state को reset करता है", "Hot Restart सिर्फ Android पर काम करता है", "दोनों में कोई अंतर नहीं है"], "correctIndex": 1, "explanation": "**Hot Reload** चलने वाले App की state को बरकरार रखते हुए code changes दिखाता है, जबकि **Hot Restart** App को पूरी तरह से restart करके state reset कर देता है।" },
        { "id": 6, "question": "Pubspec.yaml file का मुख्य उद्देश्य क्या है?", "options": ["App की UI structure define करना", "App के routing paths manage करना", "Dependencies (packages, fonts, assets) declare करना", "App का build process control करना"], "correctIndex": 2, "explanation": "**Pubspec.yaml** file project की dependencies (packages, images, fonts) को declare करने के लिए इस्तेमाल होती है।" },
        { "id": 7, "question": "Widget tree में, Parent Widget की constraints को Child Widget तक पहुँचाने का काम कौन करता है?", "options": ["ThemeData", "LayoutBuilder", "RenderObject", "BuildContext"], "correctIndex": 2, "explanation": "**RenderObject** ही actual layout और painting करता है, और Parent RenderObject अपने Child RenderObject को constraints पास करता है।" },
        { "id": 8, "question": "StatefulWidget में `setState()` method क्यों उपयोग होता है?", "options": ["Widget को dispose करने के लिए", "User input को handle करने के लिए", "Widget को rebuild करने और UI update करने के लिए", "Data को database में save करने के लिए"], "correctIndex": 2, "explanation": "**setState()** method Flutter framework को बताता है कि state data बदल गया है, और framework को Widget को rebuild (build method) करके UI को update करना चाहिए।" },
        { "id": 9, "question": "Flutter में `main()` function का प्राथमिक कार्य क्या है?", "options": ["UI draw करना", "Packages import करना", "`runApp()` call करके Widget tree शुरू करना", "Background tasks चलाना"], "correctIndex": 2, "explanation": "`main()` function App का entry point है और यह `runApp()` को call करके **Widget tree** को start करता है।" },
        { "id": 10, "question": "Imperative (अनिवार्य) programming की तुलना में Declarative (घोषणात्मक) programming का क्या लाभ है?", "options": ["Code कम लिखना पड़ता है", "UI state को manually track नहीं करना पड़ता", "Debugging हमेशा आसान होता है", "Runtime performance हमेशा तेज होती है"], "correctIndex": 1, "explanation": "Declarative UI में, आप केवल 'क्या दिखना चाहिए' बताते हैं, और Framework खुद 'कैसे दिखाना है' handle करता है, जिससे State Management आसान हो जाता है।" },
        { "id": 11, "question": "Flutter Engine किस भाषा में लिखा गया है?", "options": ["Dart", "C++", "Java", "Kotlin"], "correctIndex": 1, "explanation": "Flutter Engine **C++** में लिखा गया है और यह Dart Runtime, Skia (Graphics), और Text Layout Engine प्रदान करता है।" },
        { "id": 12, "question": "Keys का उपयोग कब करना आवश्यक हो जाता है?", "options": ["जब Widget का रंग बदलना हो", "जब Widget tree में समान प्रकार के कई Stateful Widgets हों", "जब App में animations जोड़ने हों", "जब data fetch करना हो"], "correctIndex": 1, "explanation": "**Keys** का उपयोग Flutter को यह बताने के लिए किया जाता है कि जब Widgets को Reorder या Modify किया जाता है तो उसे किस Element और State को रखना है, खासकर समान प्रकार के Stateful Widgets के लिए।" },
        { "id": 13, "question": "Widget lifecycle में, `initState()` method कब call होता है?", "options": ["जब `setState()` call होता है", "जब Widget को dispose किया जाता है", "जब Widget को पहली बार Widget tree में insert किया जाता है", "जब Parent Widget rebuild होता है"], "correctIndex": 2, "explanation": "`initState()` method **StatefulWidget** की State object के निर्माण (creation) के तुरंत बाद, केवल एक बार call होता है।" },
        { "id": 14, "question": "Flutter में Widget की `build()` method क्या return करती है?", "options": ["A Dart Object", "A new Widget instance", "A State Object", "void"], "correctIndex": 1, "explanation": "`build()` method UI का वर्णन करता है और हमेशा **एक नया Widget instance** (Widget tree का एक हिस्सा) return करता है।" },
        { "id": 15, "question": "Flutter में InheritedWidget का मुख्य उपयोग क्या है?", "options": ["UI elements को animate करना", "एक Widget tree में data को कुशलता से नीचे पास करना", "Asynchronous operations handle करना", "Widget को destroy करना"], "correctIndex": 1, "explanation": "**InheritedWidget** का उपयोग Widget tree में Ancestor से Descendant Widgets तक data को efficiently pass करने के लिए किया जाता है, जैसे कि Theme या Provider।" },
        { "id": 16, "question": "Flutter में `const` keyword का उपयोग करने का प्राथमिक कारण क्या है?", "options": ["Variable को immutable बनाना", "Runtime performance बढ़ाना (Compile-time optimization)", "Class को abstract बनाना", "Widget को Stateful बनाना"], "correctIndex": 1, "explanation": "`const` keyword compile-time पर object को fixed कर देता है, जिससे Flutter को बार-बार उन्हें rebuild करने की आवश्यकता नहीं होती, और यह **Runtime performance को optimize** करता है।" },
        { "id": 17, "question": "Container Widget का Default Child Alignment क्या होता है?", "options": ["TopLeft", "Center", "BottomRight", "Stretch"], "correctIndex": 1, "explanation": "Container Widget का Child, यदि कोई Alignment property set न की जाए, तो डिफ़ॉल्ट रूप से **Center** में Align होता है।" },
        { "id": 18, "question": "Padding Widget का उद्देश्य क्या है?", "options": ["Widget के बाहर space जोड़ना", "Widget के अंदर space जोड़ना", "Widget को center करना", "Widget के dimensions को बढ़ाना"], "correctIndex": 1, "explanation": "**Padding** Widget अपने Child Widget के चारों ओर **अंदर की तरफ (inside)** space जोड़ता है।" },
        { "id": 19, "question": "Row और Column Widgets के लिए Main Axis size property क्या होती है?", "options": ["MainAxisSize.min और MainAxisSize.max", "MainAxisSize.large और MainAxisSize.small", "Axis.horizontal और Axis.vertical", "MainAxisAlignment.start और MainAxisAlignment.end"], "correctIndex": 0, "explanation": "Row और Column, दोनों **MainAxisSize.min** (कम से कम जगह लेना) और **MainAxisSize.max** (उपलब्ध पूरी जगह लेना) का उपयोग करते हैं।" },
        { "id": 20, "question": "Flutter में Text के लिए Material Design guidelines को लागू करने के लिए किस Widget का उपयोग किया जाता है?", "options": ["RawText", "RichText", "DefaultText", "Text"], "correctIndex": 3, "explanation": "साधारण text display करने के लिए **Text** Widget का उपयोग किया जाता है, जो automatically Material Design guidelines का पालन करता है।" }
    ],
    "Navigation_Routing": [
        { "id": 21, "question": "Navigation के लिए सबसे आम Widget कौन सा है?", "options": ["Navigator", "Route", "Scaffold", "AppBar"], "correctIndex": 0, "explanation": "**Navigator** Widget screens (Routes) के stack को manage करता है, जिससे आप screens के बीच navigate कर सकते हैं।" },
        { "id": 22, "question": "दो screens के बीच data भेजने के लिए `Navigator.pushNamed()` के साथ क्या उपयोग किया जाता है?", "options": ["Arguments", "State", "Context", "Theme"], "correctIndex": 0, "explanation": "Named Routes के साथ data भेजने के लिए `settings.arguments` के माध्यम से **Arguments** का उपयोग किया जाता है।" },
        { "id": 23, "question": "`Navigator.pop()` का उद्देश्य क्या है?", "options": ["App को बंद करना", "Current screen से data fetch करना", "Stack से current Route को हटाना", "एक नया Route push करना"], "correctIndex": 2, "explanation": "`Navigator.pop()` **current Route को stack से हटाकर** पिछली screen पर वापस ले जाता है।" },
        { "id": 24, "question": "बिना किसी पिछली screen पर वापस जाने के एक नई screen को replace करने के लिए किस method का उपयोग किया जाता है?", "options": ["push", "pop", "pushReplacement", "pushNamedAndRemoveUntil"], "correctIndex": 2, "explanation": "**pushReplacement** current route को हटाकर stack में नई route डालता है।" },
        { "id": 25, "question": "App में Named Routes को कहाँ define किया जाता है?", "options": ["Scaffold Widget", "`MaterialApp` Widget की `routes` property", "Widget की `build()` method", "Pubspec.yaml file"], "correctIndex": 1, "explanation": "Named Routes को **`MaterialApp` Widget की `routes` property** में एक Map के रूप में define किया जाता है।" }
    ],
    "State_Management": [
        { "id": 26, "question": "Minimal state management के लिए, State को StatefulWidget के अंदर ही manage करने को क्या कहते हैं?", "options": ["App-wide State", "Local/Ephemeral State", "External State", "Inherited State"], "correctIndex": 1, "explanation": "StatefulWidget के `State` class के अंदर प्रबंधित (managed) state को **Local या Ephemeral State** कहते हैं।" },
        { "id": 27, "question": "Flutter में App-wide state management के लिए सबसे लोकप्रिय (Popular) package कौन सा है?", "options": ["GetX", "Bloc/Cubit", "Provider", "Riverpod"], "correctIndex": 2, "explanation": "हालांकि सभी State Management Solutions हैं, लेकिन **Provider** (InheritedWidget पर आधारित) Google द्वारा सुझाए गए शुरुआती और सबसे लोकप्रिय विकल्पों में से एक है।" },
        { "id": 28, "question": "InheritedWidget से data access करने का सबसे अच्छा तरीका क्या है?", "options": ["`setState()` call करके", "`of()` method (e.g., `Provider.of<T>(context)`) का उपयोग करके", "`build()` method को override करके", "Variable को static declare करके"], "correctIndex": 1, "explanation": "Data access करने के लिए **Static `of()` method** का उपयोग किया जाता है, जो Context के माध्यम से Widget tree में ऊपर देखता है।" },
        { "id": 29, "question": "BLoC (Business Logic Component) Pattern में Streams क्यों महत्वपूर्ण हैं?", "options": ["Data को Database में save करने के लिए", "UI Events को handle करने के लिए", "State Changes को Asynchronously emit करने के लिए", "Animation speed control करने के लिए"], "correctIndex": 2, "explanation": "BLoC में, **Streams** का उपयोग **State Changes** को Business Logic Layer से Presentation Layer (UI) तक Asynchronously (अतुल्यकालिक रूप से) भेजने के लिए किया जाता है।" },
        { "id": 30, "question": "StatelessWidget में state बदलने का एकमात्र तरीका क्या है?", "options": ["`setState()` का उपयोग करना", "Widget को dispose करना", "एक नया StatefulWidget बनाना", "Parent Widget से नया data प्राप्त करना"], "correctIndex": 3, "explanation": "StatelessWidget में खुद की state नहीं होती। यह केवल **Parent Widget द्वारा भेजे गए नए data (Constructor Arguments)** के साथ rebuild होने पर बदलता है।" },
        { "id": 31, "question": "Provider में `listen: false` का उपयोग क्यों किया जाता है?", "options": ["Performance कम करने के लिए", "जब Widget को data में बदलाव पर rebuild नहीं होना हो", "केवल data write करने के लिए", "App को debug करने के लिए"], "correctIndex": 1, "explanation": "`listen: false` का उपयोग तब किया जाता है जब Widget को केवल Provider से data **access** करना हो, लेकिन data **बदलने** पर उसे **rebuild** नहीं होना चाहिए (जैसे, Event handlers में)।" },
        { "id": 32, "question": "ChangeNotifierProvider किस तरह के Widgets के लिए सबसे उपयुक्त है?", "options": ["Stateless Widgets", "Stateful Widgets", "Widgets जिन्हें App-wide State की आवश्यकता हो", "Widgets जो केवल Local State manage करते हों"], "correctIndex": 2, "explanation": "**ChangeNotifierProvider** उन Widgets (Models) के लिए है जिन्हें State Changes को Listeners (UI Widgets) को notify करना होता है, आमतौर पर App-wide state के लिए।" },
        { "id": 33, "question": "Context का उपयोग करके InheritedWidget से data प्राप्त करने पर क्या होता है?", "options": ["यह Widget को rebuild होने से रोकता है", "यह Widget को data बदलने पर rebuild होने के लिए subscribe करता है", "यह data को केवल read करता है", "यह data को हमेशा `null` return करता है"], "correctIndex": 1, "explanation": "जब आप `Provider.of<T>(context)` (या `context.watch<T>()`) का उपयोग करते हैं, तो Widget को data बदलने पर **rebuild होने के लिए subscribe** किया जाता है।" },
        { "id": 34, "question": "StatefulWidget lifecycle में `didUpdateWidget()` method कब call होता है?", "options": ["जब state change होती है", "जब Parent Widget इसे rebuild करता है और configuration बदल जाती है", "जब Widget को पहली बार बनाया जाता है", "जब `dispose()` call होता है"], "correctIndex": 1, "explanation": "`didUpdateWidget()` तब call होता है जब Parent Widget, Child Widget को **एक नया Widget instance** (नया Configuration) पास करता है, लेकिन RunTime Environment (Element) को Re-use किया जाता है।" },
        { "id": 35, "question": "Widget tree में data को ऊपर (upwards) pass करने का सबसे आम तरीका क्या है?", "options": ["InheritedWidget", "BuildContext", "Callbacks (functions)", "Global variables"], "correctIndex": 2, "explanation": "Child Widget से Parent Widget को data भेजने के लिए, Parent Widget Child Widget को **एक Function (Callback)** pass करता है, जिसे Child, Event होने पर execute करता है।" }
    ],
    "Asynchronous_Programming": [
        { "id": 36, "question": "Dart में Asynchronous operations के लिए मुख्य कीवर्ड्स (keywords) क्या हैं?", "options": ["let, const, var", "async, await", "try, catch, finally", "for, while, do"], "correctIndex": 1, "explanation": "Asynchronous code को manage करने के लिए **`async`** (function को async बनाता है) और **`await`** (async operation के पूरा होने का इंतजार करता है) का उपयोग किया जाता है।" },
        { "id": 37, "question": "Future class का मुख्य उद्देश्य क्या है?", "options": ["Synchronous data store करना", "एक Value या Error को Asynchronously (भविष्य में) represent करना", "UI Animation handle करना", "Widget tree manage करना"], "correctIndex": 1, "explanation": "**Future** object, Dart में Asynchronous operation का result (या error) represent करता है, जो भविष्य में उपलब्ध होगा।" },
        { "id": 38, "question": "FutureBuilder Widget का क्या काम है?", "options": ["UI को बार-बार rebuild करना", "User input को handle करना", "Future के साथ interact करके उसके different states (Loading, Data, Error) पर आधारित UI दिखाना", "HTTP requests भेजना"], "correctIndex": 2, "explanation": "**FutureBuilder** Asynchronous data (Future) के state (waiting, done with data, done with error) के आधार पर UI को conditionally render करता है।" },
        { "id": 39, "question": "Streams का उपयोग आमतौर पर किसके लिए किया जाता है?", "options": ["एकल (Single) value fetch करने के लिए", "Multiple (लगातार) values को समय के साथ emit करने के लिए", "Static data store करने के लिए", "UI layout define करने के लिए"], "correctIndex": 1, "explanation": "**Stream** objects, time के साथ **multiple values** या events को Asynchronously deliver करने के लिए उपयोग होते हैं (जैसे, database updates, BLoC state changes)।" },
        { "id": 40, "question": "StreamBuilder Widget का मुख्य उद्देश्य क्या है?", "options": ["Future data handle करना", "Static UI बनाना", "Stream से आने वाले data (snapshots) के आधार पर UI को dynamically update करना", "App theme manage करना"], "correctIndex": 2, "explanation": "**StreamBuilder** किसी Stream से आने वाले data changes पर automatically listen करता है और UI को update करता है।" },
        { "id": 41, "question": "यदि एक `async` function को `await` keyword के बिना call किया जाता है, तो क्या होता है?", "options": ["Error आता है", "Function Syncronously चलता है", "Function Asynchronously चलेगा, लेकिन इसका result handle नहीं होगा", "App crash हो जाता है"], "correctIndex": 2, "explanation": "Function Asynchronously चलेगा, लेकिन calling code **उसके पूरा होने का इंतजार नहीं करेगा**, जिससे result या error को संभालना मुश्किल हो जाएगा।" },
        { "id": 42, "question": "Dart में `Isolate` का उपयोग क्यों किया जाता है?", "options": ["UI thread को block होने से रोकने के लिए", "Data को तेजी से transfer करने के लिए", "Web APIs call करने के लिए", "UI animation smooth करने के लिए"], "correctIndex": 0, "explanation": "**Isolates** Dart में Concurrency (समवर्ती) की इकाई हैं, जो background में heavy computations चलाकर **UI thread (Main Isolate) को block होने से रोकते हैं**।" },
        { "id": 43, "question": "Dart में `try-catch` ब्लॉक का उपयोग Asynchronous code में क्यों महत्वपूर्ण है?", "options": ["Memory leaks रोकने के लिए", "State Management के लिए", "Asynchronous operations से आने वाले **errors** को gracefully handle करने के लिए", "Hot Reload enable करने के लिए"], "correctIndex": 2, "explanation": "`try-catch` ब्लॉक Asynchronous operations (जैसे Future) से आने वाले **Exceptions (errors)** को catch करने और उन्हें संभालकर App को crash होने से रोकने के लिए ज़रूरी है।" },
        { "id": 44, "question": "किसी Future को manually complete करने के लिए किस class का उपयोग किया जाता है?", "options": ["Timer", "StreamController", "Completer", "Future.value"], "correctIndex": 2, "explanation": "**Completer** class का उपयोग एक Future object बनाने के लिए किया जाता है जिसे आप बाद में manually data या error के साथ complete कर सकते हैं।" },
        { "id": 45, "question": "Streams में `yield` keyword का उपयोग क्यों किया जाता है?", "options": ["Future return करने के लिए", "UI rebuild करने के लिए", "एक नया value Stream में emit करने के लिए", "Function को pause करने के लिए"], "correctIndex": 2, "explanation": "एक `async*` (async generator) function में, **`yield`** keyword का उपयोग **Stream में एक नया value** emit करने के लिए किया जाता है।" }
    ],
    "Advanced_Concepts": [
        { "id": 46, "question": "Custom `RenderObject` लिखने का प्राथमिक कारण क्या है?", "options": ["New state management pattern बनाने के लिए", "Native code से interact करने के लिए", "Widgets पर पूरी तरह से **Custom Layout और Painting** logic लागू करने के लिए", "Widgets के बीच data pass करने के लिए"], "correctIndex": 2, "explanation": "**RenderObject** Flutter की सबसे निचली layer है, जहाँ actual layout constraints, painting, और hit testing होता है। Custom RenderObject से बहुत specific UI needs पूरी होती हैं।" },
        { "id": 47, "question": "Profile Mode और Release Mode में मुख्य अंतर क्या है?", "options": ["Profile Mode सिर्फ Android के लिए है", "Profile Mode performance analysis के लिए है, Release Mode optimized final build के लिए", "Profile Mode में Hot Reload होता है", "Release Mode में Debugging logs दिखते हैं"], "correctIndex": 1, "explanation": "**Profile Mode** performance data इकट्ठा करता है (CPU usage, memory) जबकि **Release Mode** सबसे optimized और fast code generate करता है।" },
        { "id": 48, "question": "Flutter में `Platform Channels` का उद्देश्य क्या है?", "options": ["Flutter code को Web browser से जोड़ना", "Dart code और Platform-specific (Native) code के बीच communication करना", "App data को Cloud पर store करना", "Widgets के बीच data pass करना"], "correctIndex": 1, "explanation": "**Platform Channels** (MethodChannel, EventChannel) Dart code को iOS (Swift/Objective-C) और Android (Kotlin/Java) के Native code के साथ message passing के माध्यम से interact करने देते हैं।" },
        { "id": 49, "question": "Canvas और CustomPainter का उपयोग क्यों किया जाता है?", "options": ["Standard Widgets को Draw करने के लिए", "Text और Images को Display करने के लिए", "Low-level, **Custom 2D Graphics** और Shapes Draw करने के लिए", "3D Models Render करने के लिए"], "correctIndex": 2, "explanation": "**Canvas** और **CustomPainter** Widgets का उपयोग Standard Widgets का उपयोग किए बिना अपने स्वयं के **Custom 2D shapes, lines, और paths** को Draw करने के लिए किया जाता है।" },
        { "id": 50, "question": "Sliver Widgets का उपयोग आमतौर पर किस संदर्भ में किया जाता है?", "options": ["Grid Layout बनाने के लिए", "Forms में input handle करने के लिए", "Scrollable content के **dynamic और flexible portions** बनाने के लिए (e.g., CustomScrollView)", "Navigation Drawer बनाने के लिए"], "correctIndex": 2, "explanation": "**Sliver Widgets** (जैसे SliverAppBar, SliverList) वे Widgets हैं जो सीधे Scrollable area के अंदर Scroll effects के लिए उपयोग होते हैं।" },
        { "id": 51, "question": "Implicit Animations और Explicit Animations में क्या अंतर है?", "options": ["Explicit animations ज्यादा आसान होते हैं", "Implicit animations (AnimatedContainer) खुद manage होते हैं; Explicit animations (AnimationController) को manually control करना पड़ता है", "Implicit animations सिर्फ Stateless Widgets के लिए हैं", "Explicit animations सिर्फ iOS पर चलते हैं"], "correctIndex": 1, "explanation": "**Implicit Animations** (AnimatedContainer) properties के change होने पर अपने आप animate होते हैं, जबकि **Explicit Animations** (AnimationController) के लिए आपको Duration, Start/Stop आदि को कोड में specify करना पड़ता है।" },
        { "id": 52, "question": "DevTools का उपयोग किसलिए किया जाता है?", "options": ["Code Deploy करने के लिए", "UI design करने के लिए", "Performance Profiling, Widget Inspection, और Debugging के लिए", "Database manage करने के लिए"], "correctIndex": 2, "explanation": "**DevTools** Flutter के साथ आने वाला एक powerful tool suite है जो App की performance, memory usage, और Widget tree को inspect करने में मदद करता है।" },
        { "id": 53, "question": "Deep Linking (या Universal Links) का उद्देश्य क्या है?", "options": ["App को database से जोड़ना", "App के अंदर routes manage करना", "Web browser या किसी अन्य App से सीधे App के **specific screen** पर navigate करना", "Backend API call करना"], "correctIndex": 2, "explanation": "**Deep Linking** बाहरी स्रोतों (जैसे एक URL) को App के अंदर एक विशिष्ट Route (screen) पर navigate करने देता है।" },
        { "id": 54, "question": "Testing के तीन मुख्य प्रकार क्या हैं?", "options": ["Unit, Integration, E2E", "Unit, Widget, Integration", "Basic, Advanced, Full", "UI, API, Database"], "correctIndex": 1, "explanation": "Flutter में standard testing types **Unit testing** (फंक्शन/क्लास लॉजिक), **Widget testing** (UI unit), और **Integration testing** (पूरे flow) हैं।" },
        { "id": 55, "question": "Accessibility के लिए Flutter में कौन सी property महत्वपूर्ण है?", "options": ["`key`", "`semanticsLabel`", "`color`", "`padding`"], "correctIndex": 1, "explanation": "`semanticsLabel` Screen Readers (जैसे TalkBack, VoiceOver) को Widget के उद्देश्य को बताने के लिए उपयोग होता है, जो **Accessibility** के लिए महत्वपूर्ण है।" },
        { "id": 56, "question": "Tree Shaking का क्या मतलब है?", "options": ["Widget tree को optimize करना", "Unused code (dead code) को final build से हटाना", "Animation performance सुधारना", "Garbage collection process"], "correctIndex": 1, "explanation": "**Tree Shaking** एक compiler optimization है जो final build size को कम करने के लिए आपके कोड से **Unused Libraries और classes** को हटा देता है।" },
        { "id": 57, "question": "Flutter में `GlobalKey` का उपयोग क्यों किया जाता है?", "options": ["Widgets के बीच data pass करने के लिए", "Widget tree में कहीं भी एक **Widget, Element, या State** को Uniquely access करने के लिए", "Global variables define करने के लिए", "App theme manage करने के लिए"], "correctIndex": 1, "explanation": "**GlobalKey** एक Widget की identity को across rebuilds और tree locations पर बनाए रखने में मदद करता है, जैसे कि Form state को access करने के लिए।" },
        { "id": 58, "question": "`MediaQuery.of(context).size` का उपयोग किसलिए किया जाता है?", "options": ["Device की Battery level check करने के लिए", "Device की **Screen Size और Orientation** जानने के लिए", "Database से data fetch करने के लिए", "App का version number जानने के लिए"], "correctIndex": 1, "explanation": "**MediaQuery** Device और Screen के बारे में जानकारी (जैसे size, pixel ratio, orientation) प्राप्त करने के लिए उपयोग होता है।" },
        { "id": 59, "question": "`LayoutBuilder` Widget का उद्देश्य क्या है?", "options": ["Animated containers बनाने के लिए", "Parent Widget द्वारा Child को दी गई constraints के आधार पर **UI को Adapt (बदलना)** करने के लिए", "Local state manage करने के लिए", "Asynchronous data handle करने के लिए"], "correctIndex": 1, "explanation": "**LayoutBuilder** का उपयोग तब किया जाता है जब Child Widget को अपने Parent के Constraints (e.g., available width) के अनुसार अपना layout बदलना होता है।" },
        { "id": 60, "question": "Mixin क्या है और इसका उपयोग कैसे किया जाता है?", "options": ["Inheritance का एक रूप", "एक Class में code को re-use करने का तरीका, **`with`** keyword का उपयोग करके", "एक प्रकार का Widget", "Asynchronous operation"], "correctIndex": 1, "explanation": "**Mixin** एक ऐसा तरीका है जिससे आप किसी Class के functionality को `extends` किए बिना उसमें code re-use कर सकते हैं, इसके लिए **`with`** keyword का उपयोग होता है।" }
    ],
    "Debugging_Performance": [
        { "id": 61, "question": "Performance issue (Jank) का मुख्य कारण क्या है?", "options": ["Widgets को `const` declare करना", "Heavy computations को Main (UI) thread पर चलाना", "Hot Reload का उपयोग करना", "Too many assets का उपयोग करना"], "correctIndex": 1, "explanation": "Flutter में **Heavy computations** को **Main (UI) thread** पर चलाने से UI frame rates drop हो सकते हैं, जिससे Jank (झटके) महसूस होते हैं।" },
        { "id": 62, "question": "एक Widget के `build()` method में side effects (जैसे HTTP calls) क्यों नहीं होने चाहिए?", "options": ["इससे UI slow हो जाता है", "`build()` method कई बार call हो सकता है, जिससे **Side effects बार-बार execute** हो सकते हैं", "इससे memory leak होती है", "यह Dart language rule का उल्लंघन है"], "correctIndex": 1, "explanation": "`build()` method को **Pure** (केवल UI description) होना चाहिए क्योंकि यह बहुत बार call हो सकता है। Side effects (नेटवर्क कॉल, state updates) को `initState`, `didChangeDependencies`, या Business Logic Layer में handle किया जाना चाहिए।" },
        { "id": 63, "question": "`didChangeDependencies()` method कब call होता है?", "options": ["जब `setState()` call होता है", "जब Widget tree में कोई **InheritedWidget** बदलता है", "जब Widget dispose होता है", "हर बार `build()` call होने से पहले"], "correctIndex": 1, "explanation": "`didChangeDependencies()` **InheritedWidget** पर निर्भरता (dependency) बदलने पर call होता है, जैसे Theme change होने पर।" },
        { "id": 64, "question": "Flutter में `assert()` function का उपयोग किसलिए किया जाता है?", "options": ["Runtime error फेंकने के लिए", "Production build में conditional logic के लिए", "Code की **correctness को Debug Mode** में enforce करने के लिए", "Asynchronous code handle करने के लिए"], "correctIndex": 2, "explanation": "**`assert()`** का उपयोग केवल **Debug Mode** में conditions को verify करने के लिए किया जाता है और यह Production build में पूरी तरह से हटा दिया जाता है।" },
        { "id": 65, "question": "Debugging के दौरान, Widget tree में एक Widget के properties और state को inspect करने के लिए किस tool का उपयोग होता है?", "options": ["IDE Console", "Flutter Inspector (DevTools में)", "Android Logcat", "VS Code Output"], "correctIndex": 1, "explanation": "**Flutter Inspector** DevTools का हिस्सा है, जो Widget tree को visualize करने और किसी भी Widget की properties को run-time पर inspect करने में मदद करता है।" },
        { "id": 66, "question": "Memory Leak से बचने का एक प्रभावी तरीका क्या है?", "options": ["सिर्फ Stateless Widgets का उपयोग करना", "Streams, Timers, और Animation Controllers को **`dispose()`** method में cancel करना", "हर Widget में `const` का उपयोग करना", "External packages का उपयोग न करना"], "correctIndex": 1, "explanation": "**`dispose()`** method में Resources (जैसे Streams, Timers, Controllers) को properly cancel करना **Memory Leaks** से बचने के लिए महत्वपूर्ण है।" },
        { "id": 67, "question": "Flutter में Performance Overlay क्या दिखाता है?", "options": ["CPU temperature", "Network speed", "**Raster Cache and UI** की Frame Rate (FPS) Graphs", "App size"], "correctIndex": 2, "explanation": "**Performance Overlay** एक diagnostic tool है जो दो graphs दिखाता है: UI Thread और Raster Thread के performance का (Frame Rate)।" },
        { "id": 68, "question": "Widget tree में unnecessary rebuilds से बचने का एक तरीका क्या है?", "options": ["Widget को Local variable के रूप में store करना", "Widget को `const` constructor के साथ declare करना", "Stateless Widget का उपयोग करना", "Widget को `GlobalKey` देना"], "correctIndex": 1, "explanation": "`const` constructor का उपयोग करने से Flutter यह सुनिश्चित करता है कि Widget के properties नहीं बदले हैं, और **unnecessary rebuilds** से बचता है।" },
        { "id": 69, "question": "Dart code को Native Platform पर चलाने के लिए कौन सा mode सबसे slow होता है?", "options": ["Debug Mode", "Profile Mode", "Release Mode", "Test Mode"], "correctIndex": 0, "explanation": "**Debug Mode** सबसे slow होता है क्योंकि इसमें Hot Reload, Debugging features, और Assertions जैसी कई checks शामिल होती हैं।" },
        { "id": 70, "question": "Animation Controller को `State` class में क्यों declare किया जाता है?", "options": ["इससे animation तेज होता है", "Controller की **lifecycle** को Widget की lifecycle के साथ बांधने के लिए", "Global access देने के लिए", "सिर्फ `build()` method में उपयोग करने के लिए"], "correctIndex": 1, "explanation": "Controller की `State` class में declare करने से यह सुनिश्चित होता है कि Controller **`initState()` में initialize** और **`dispose()` में clean up** हो जाए।" }
    ],
    "Miscellaneous_Concepts": [
        { "id": 71, "question": "Adaptive (अनुकूली) UI बनाने का मतलब क्या है?", "options": ["सिर्फ Tablet layout बनाना", "UI को **different screen sizes, orientations, और platforms** के अनुसार adapt करना", "Animations जोड़ना", "App को offline चलाना"], "correctIndex": 1, "explanation": "**Adaptive UI** वह है जो Device की characteristics (size, aspect ratio) और Platform (iOS, Android, Web) के अनुसार खुद को adjust करता है।" },
        { "id": 72, "question": "Dart में `final` और `const` में क्या अंतर है?", "options": ["`final` केवल functions के लिए है", "`final` value को runtime पर सेट करता है; `const` value को compile-time पर सेट करता है", "दोनों पूरी तरह से समान हैं", "`const` को फिर से assign किया जा सकता है"], "correctIndex": 1, "explanation": "**`final`** variable की value को एक बार set होने के बाद runtime पर नहीं बदला जा सकता, जबकि **`const`** variable को compile-time पर ही fixed किया जाता है।" },
        { "id": 73, "question": "InheritedWidget से data read करने के लिए किस method का उपयोग करना चाहिए जो Widget को rebuild न करे?", "options": ["`context.watch<T>()`", "`context.select<T, R>()`", "`context.read<T>()`", "`context.dependOnInheritedWidgetOfExactType<T>()`"], "correctIndex": 2, "explanation": "**`context.read<T>()`** का उपयोग data को read करने के लिए किया जाता है, लेकिन यह Widget को उस data के बदलने पर **rebuild होने के लिए subscribe नहीं करता**।" },
        { "id": 74, "question": "Flutter में किस प्रकार का rendering engine उपयोग होता है?", "options": ["WebKit", "Skia", "OpenGL", "DirectX"], "correctIndex": 1, "explanation": "Flutter **Skia** Graphics Engine का उपयोग करता है, जो Google Chrome, Android और Chrome OS में भी उपयोग होता है।" },
        { "id": 75, "question": "Dart में `late` keyword का उद्देश्य क्या है?", "options": ["Variable को Nullable बनाना", "Variable को **declaration के बाद initialize** करने की अनुमति देना, यह मानते हुए कि यह उपयोग से पहले initialize हो जाएगा", "Variable को immutable बनाना", "Variable को Asynchronous बनाना"], "correctIndex": 1, "explanation": "**`late`** keyword आपको एक Non-nullable variable declare करने देता है जिसे आप बाद में initialize कर सकते हैं (जैसे `initState()` में), यह मानते हुए कि यह पहली बार उपयोग होने से पहले set हो जाएगा।" },
        { "id": 76, "question": "Dart में `factory` constructor का उपयोग क्यों किया जाता है?", "options": ["Subclass बनाने के लिए", "जब constructor हमेशा **नया instance return न करे** (e.g., Singleton या cache से return)", "Asynchronous operations handle करने के लिए", "Interface define करने के लिए"], "correctIndex": 1, "explanation": "**`factory`** constructor एक `return` statement का उपयोग करके **subclass, cached instance, या null** return करने की अनुमति देता है।" },
        { "id": 77, "question": "Flutter में `Theme.of(context)` का क्या काम है?", "options": ["Navigation manage करना", "InheritedWidget के माध्यम से current **App Theme** data access करना", "Local state manage करना", "Device location check करना"], "correctIndex": 1, "explanation": "**`Theme.of(context)`** (जो InheritedWidget पर आधारित है) current theme settings (colors, fonts, etc.) को पूरे Widget tree में access करने देता है।" },
        { "id": 78, "question": "Dart में `...` (Spread Operator) का उपयोग किसलिए होता है?", "options": ["Functions को call करने के लिए", "Lists या collections के elements को **दूसरी List में insert** करने के लिए", "Comments लिखने के लिए", "Error handling के लिए"], "correctIndex": 1, "explanation": "**Spread Operator** (`...`) का उपयोग एक List के सभी elements को आसानी से दूसरी List या collection में expand करके डालने के लिए किया जाता है।" },
        { "id": 79, "question": "Code splitting और Deferred Loading का उद्देश्य क्या है?", "options": ["Performance profiling करना", "Application के **initial load time** को कम करने के लिए", "Memory leaks prevent करना", "Animations को smooth बनाना"], "correctIndex": 1, "explanation": "**Deferred Loading** (Code Splitting) Web/Desktop build में उन parts को बाद में load करने की अनुमति देता है जिनकी तत्काल आवश्यकता नहीं है, जिससे **initial load time** कम हो जाता है।" },
        { "id": 80, "question": "Flutter में `MaterialApp` और `CupertinoApp` में क्या अंतर है?", "options": ["`MaterialApp` सिर्फ Android के लिए है", "वे क्रमशः **Android (Material Design) और iOS (Cupertino Design)** guidelines लागू करते हैं", "`CupertinoApp` में animations नहीं होते", "दोनों समान हैं"], "correctIndex": 1, "explanation": "**`MaterialApp`** Google के Material Design guidelines, और **`CupertinoApp`** Apple के iOS design guidelines के Widgets और themes प्रदान करता है।" },
        { "id": 81, "question": "Dart में Null Safety का क्या लाभ है?", "options": ["Code को छोटा बनाना", "Code को Asynchronous बनाना", "Runtime पर **unexpected null reference errors** को रोकना", "Debugging को कठिन बनाना"], "correctIndex": 2, "explanation": "**Null Safety** compile-time पर nullability को enforce करके, **Runtime Errors** को रोकता है।" },
        { "id": 82, "question": "Dependency Injection (DI) के लिए Flutter में किस package का उपयोग किया जाता है?", "options": ["HTTP", "Shared Preferences", "GetIt/Injectable", "Provider"], "correctIndex": 2, "explanation": "**GetIt** (या Injectable framework) DI के लिए एक लोकप्रिय package है, जो App-wide objects को register और access करने में मदद करता है।" },
        { "id": 83, "question": "CustomScrollView और ListView में मुख्य अंतर क्या है?", "options": ["ListView केवल vertical scroll करता है", "CustomScrollView **Sliver Widgets** को combine करके complex scroll effects बनाने की अनुमति देता है", "CustomScrollView slow होता है", "दोनों समान हैं"], "correctIndex": 1, "explanation": "**CustomScrollView** कई Scrollable Components (Slivers) को एक single scroll view में combine करने की flexibility देता है, जबकि ListView एक single, simple list है।" },
        { "id": 84, "question": "Widget के lifecycle में, `dispose()` method कब call होता है?", "options": ["जब `setState()` call होता है", "जब Widget को **tree से permanent रूप से हटाया** जाता है", "जब `build()` call होता है", "जब App background में जाता है"], "correctIndex": 1, "explanation": "`dispose()` method Resources को clean up करने के लिए call होता है जब State object को **permanently** हटा दिया जाता है।" },
        { "id": 85, "question": "`Flexible` और `Expanded` Widgets में क्या अंतर है?", "options": ["Flexible only Column के लिए है", "Expanded एक **Flexible** Widget है जिसकी `flex` property हमेशा **1** होती है और यह पूरी उपलब्ध जगह लेता है", "Flexible सिर्फ Row के लिए है", "दोनों पूरी तरह से समान हैं"], "correctIndex": 1, "explanation": "`Expanded` वास्तव में `Flexible` का एक Subclass है, जिसे `fit: FlexFit.tight` और `flex: 1` के साथ configure किया गया है, जिसका मतलब है कि यह **पूरी उपलब्ध जगह** लेता है।" },
        { "id": 86, "question": "Dart में `await for` का उपयोग किसलिए होता है?", "options": ["Future की list को handle करने के लिए", "**Stream** से आने वाले **सभी values** को iterate करने के लिए", "`async` function को `return` करने के लिए", "Errors catch करने के लिए"], "correctIndex": 1, "explanation": "**`await for`** loop का उपयोग Stream से आने वाले प्रत्येक value को Asynchronously Process करने के लिए किया जाता है।" },
        { "id": 87, "question": "Accessibility tree क्या है?", "options": ["Widget tree का एक प्रकार", "Screen Readers के लिए **UI elements** और उनके **semantic descriptions** का एक representation", "Application Theme data", "A database of all user data"], "correctIndex": 1, "explanation": "**Accessibility Tree** वह संरचना है जिसका उपयोग Screen Readers (टॉकबैक/वॉयसओवर) users को UI elements के बारे में जानकारी देने के लिए करते हैं।" },
        { "id": 88, "question": "Dart में Generics (`<T>`) का उपयोग क्यों किया जाता है?", "options": ["Error handling के लिए", "Code को Type-safe बनाने और **re-use** करने के लिए", "Asynchronous operations define करने के लिए", "Animations handle करने के लिए"], "correctIndex": 1, "explanation": "**Generics** एक ही code को **different types** के साथ काम करने देते हैं, जिससे type safety बनी रहती है और code reusability बढ़ती है।" },
        { "id": 89, "question": "Flutter में Hero Animation का क्या उद्देश्य है?", "options": ["Background image animate करना", "एक screen से दूसरी screen पर जाने पर **एक Widget को smoothly transition** करना", "Text को fade करना", "Loading screen बनाना"], "correctIndex": 1, "explanation": "**Hero Widget** एक साधारण Widget (आमतौर पर एक Image) को दो screens के बीच **flight animation** के साथ transition करने की अनुमति देता है।" },
        { "id": 90, "question": "Dart में Extension Methods का क्या लाभ है?", "options": ["Inheritance को रोकना", "Existing classes (जैसे String, List) में **नया functionality** बिना उन्हें modify किए जोड़ना", "नया class define करना", "Runtime performance बढ़ाना"], "correctIndex": 1, "explanation": "**Extension Methods** आपको existing libraries या classes (जिन पर आपका control नहीं है) में **नये methods** जोड़ने की अनुमति देते हैं।" },
        { "id": 91, "question": "Flutter में `aspectRatio` property का क्या काम है?", "options": ["Widget की width सेट करना", "Widget की **Width और Height का Ratio** maintain करना", "Widget को center करना", "Widget की position adjust करना"], "correctIndex": 1, "explanation": "**aspectRatio** property Widget की width और height के बीच एक fixed अनुपात (ratio) बनाए रखती है, भले ही उपलब्ध space बदल जाए।" },
        { "id": 92, "question": "Widget tree में, `Element` layer का क्या काम है?", "options": ["UI को paint करना", "Widget और RenderObject के बीच **link** के रूप में काम करना", "User input handle करना", "App state store करना"], "correctIndex": 1, "explanation": "**Element** layer, Widget और RenderObject के बीच की middle layer है जो Widget tree की actual hierarchical structure को manage करती है और Widgets को RenderObjects से जोड़ती है।" },
        { "id": 93, "question": "Flutter में `IntrinsicHeight` और `IntrinsicWidth` Widgets का उपयोग क्यों कम करना चाहिए?", "options": ["वे बहुत सारे memory लेते हैं", "वे अक्सर **Slow/Expensive** होते हैं क्योंकि उन्हें Child के layout को बार-बार मापने की आवश्यकता होती है", "वे सिर्फ Web पर काम करते हैं", "वे UI को complex बनाते हैं"], "correctIndex": 1, "explanation": "ये Widgets Child के Intrinsics (आवश्यक width/height) की गणना करने के लिए **दो बार layout pass** करते हैं, जो performance के लिए **Expensive** हो सकता है।" },
        { "id": 94, "question": "Flutter में `setState()` के बिना state बदलने का सबसे आम तरीका क्या है?", "options": ["`final` variables का उपयोग करना", "Provider या Riverpod जैसे **State Management tools** का उपयोग करना", "Background process चलाना", "Custom RenderObject का उपयोग करना"], "correctIndex": 1, "explanation": "**State Management tools** (जैसे Provider, BLoC) state changes को handle करते हैं और `Consumer` या `Selector` Widgets को rebuild करने के लिए notify करते हैं, `setState()` को bypass करते हुए।" },
        { "id": 95, "question": "Widget tree में, `didUpdateWidget()` method का उपयोग कब किया जाता है?", "options": ["Widgets को dispose करने के लिए", "Parent Widget से **नया Widget configuration** प्राप्त होने पर logic execute करने के लिए", "Asynchronous data fetch करने के लिए", "UI events handle करने के लिए"], "correctIndex": 1, "explanation": "जब Parent Widget, Child Widget को **नया configuration** (e.g., नया parameter value) पास करता है, तब `didUpdateWidget()` call होता है।" },
        { "id": 96, "question": "Accessibility के संदर्भ में, Tap Target Size क्या होना चाहिए?", "options": ["$10 \times 10$", "$24 \times 24$", "$44 \times 44$", "$60 \times 60$"], "correctIndex": 2, "explanation": "Material Design guidelines के अनुसार, Touch Targets (जैसे buttons) का **न्यूनतम size $48 \times 48$** (या Apple के अनुसार $44 \times 44$) होना चाहिए ताकि users आसानी से interact कर सकें।" },
        { "id": 97, "question": "Flutter का 'Golden Test' क्या है?", "options": ["Unit Test का एक प्रकार", "Integration Test का एक प्रकार", "**Pixel-by-pixel** UI output (screenshot) की तुलना पिछले approved output से करने वाला test", "Performance test"], "correctIndex": 2, "explanation": "**Golden Test** (या Screenshot/Snapshot Test) एक UI Test है जो यह सुनिश्चित करता है कि UI में कोई unexpected visual change नहीं आया है।" },
        { "id": 98, "question": "`LayoutBuilder` को `MediaQuery.of(context).size` से बेहतर कब माना जाता है?", "options": ["जब आपको पूरे screen size की आवश्यकता हो", "जब आपको **Parent Widget** के **Constraints** के आधार पर layout adjust करना हो", "जब आपको Device theme check करना हो", "जब आपको Landscape mode detect करना हो"], "correctIndex": 1, "explanation": "`LayoutBuilder` आपको उस **Specific Parent Widget** की constraints देता है, जबकि `MediaQuery` हमेशा **पूरे Device screen size** की जानकारी देता है।" },
        { "id": 99, "question": "Flutter में Tree Shaking (Dead Code Elimination) किस mode में सबसे प्रभावी होता है?", "options": ["Debug Mode", "Test Mode", "Profile Mode", "Release Mode"], "correctIndex": 3, "explanation": "**Release Mode** में compiler Tree Shaking को पूरी तरह से लागू करता है, जिससे final App size सबसे कम होता है।" },
        { "id": 100, "question": "Dart में `extension` keyword का उपयोग क्यों किया जाता है?", "options": ["Class को Abstract बनाने के लिए", "Mixin define करने के लिए", "मौजूदा types में **नए methods** जोड़ने के लिए", "Error handling के लिए"], "correctIndex": 2, "explanation": "**`extension`** keyword का उपयोग **Extension Methods** को define करने के लिए किया जाता है, जो मौजूदा classes में functionality जोड़ता है।" }
    ],
};


